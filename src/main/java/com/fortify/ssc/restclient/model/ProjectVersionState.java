/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Project Version State DTO object
 */
@ApiModel(description = "Project Version State DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class ProjectVersionState {
  @SerializedName("analysisResultsExist")
  private Boolean analysisResultsExist = null;

  @SerializedName("analysisUploadEnabled")
  private Boolean analysisUploadEnabled = null;

  @SerializedName("attentionRequired")
  private Boolean attentionRequired = null;

  @SerializedName("auditEnabled")
  private Boolean auditEnabled = null;

  @SerializedName("batchBugSubmissionExists")
  private Boolean batchBugSubmissionExists = null;

  @SerializedName("committed")
  private Boolean committed = null;

  @SerializedName("criticalPriorityIssueCountDelta")
  private Integer criticalPriorityIssueCountDelta = null;

  @SerializedName("deltaPeriod")
  private Integer deltaPeriod = null;

  @SerializedName("extraMessage")
  private String extraMessage = null;

  @SerializedName("hasCustomIssues")
  private Boolean hasCustomIssues = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("issueCountDelta")
  private Integer issueCountDelta = null;

  @SerializedName("lastFprUploadDate")
  private OffsetDateTime lastFprUploadDate = null;

  @SerializedName("metricEvaluationDate")
  private OffsetDateTime metricEvaluationDate = null;

  @SerializedName("percentAuditedDelta")
  private Float percentAuditedDelta = null;

  @SerializedName("percentCriticalPriorityIssuesAuditedDelta")
  private Float percentCriticalPriorityIssuesAuditedDelta = null;

  public ProjectVersionState analysisResultsExist(Boolean analysisResultsExist) {
    this.analysisResultsExist = analysisResultsExist;
    return this;
  }

   /**
   * Get analysisResultsExist
   * @return analysisResultsExist
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isAnalysisResultsExist() {
    return analysisResultsExist;
  }

  public void setAnalysisResultsExist(Boolean analysisResultsExist) {
    this.analysisResultsExist = analysisResultsExist;
  }

  public ProjectVersionState analysisUploadEnabled(Boolean analysisUploadEnabled) {
    this.analysisUploadEnabled = analysisUploadEnabled;
    return this;
  }

   /**
   * Get analysisUploadEnabled
   * @return analysisUploadEnabled
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isAnalysisUploadEnabled() {
    return analysisUploadEnabled;
  }

  public void setAnalysisUploadEnabled(Boolean analysisUploadEnabled) {
    this.analysisUploadEnabled = analysisUploadEnabled;
  }

  public ProjectVersionState attentionRequired(Boolean attentionRequired) {
    this.attentionRequired = attentionRequired;
    return this;
  }

   /**
   * Get attentionRequired
   * @return attentionRequired
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isAttentionRequired() {
    return attentionRequired;
  }

  public void setAttentionRequired(Boolean attentionRequired) {
    this.attentionRequired = attentionRequired;
  }

  public ProjectVersionState auditEnabled(Boolean auditEnabled) {
    this.auditEnabled = auditEnabled;
    return this;
  }

   /**
   * Get auditEnabled
   * @return auditEnabled
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isAuditEnabled() {
    return auditEnabled;
  }

  public void setAuditEnabled(Boolean auditEnabled) {
    this.auditEnabled = auditEnabled;
  }

  public ProjectVersionState batchBugSubmissionExists(Boolean batchBugSubmissionExists) {
    this.batchBugSubmissionExists = batchBugSubmissionExists;
    return this;
  }

   /**
   * Get batchBugSubmissionExists
   * @return batchBugSubmissionExists
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isBatchBugSubmissionExists() {
    return batchBugSubmissionExists;
  }

  public void setBatchBugSubmissionExists(Boolean batchBugSubmissionExists) {
    this.batchBugSubmissionExists = batchBugSubmissionExists;
  }

  public ProjectVersionState committed(Boolean committed) {
    this.committed = committed;
    return this;
  }

   /**
   * False if Project Version is in an incomplete state
   * @return committed
  **/
  @ApiModelProperty(example = "false", required = true, value = "False if Project Version is in an incomplete state")
  public Boolean isCommitted() {
    return committed;
  }

  public void setCommitted(Boolean committed) {
    this.committed = committed;
  }

  public ProjectVersionState criticalPriorityIssueCountDelta(Integer criticalPriorityIssueCountDelta) {
    this.criticalPriorityIssueCountDelta = criticalPriorityIssueCountDelta;
    return this;
  }

   /**
   * Get criticalPriorityIssueCountDelta
   * @return criticalPriorityIssueCountDelta
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getCriticalPriorityIssueCountDelta() {
    return criticalPriorityIssueCountDelta;
  }

  public void setCriticalPriorityIssueCountDelta(Integer criticalPriorityIssueCountDelta) {
    this.criticalPriorityIssueCountDelta = criticalPriorityIssueCountDelta;
  }

  public ProjectVersionState deltaPeriod(Integer deltaPeriod) {
    this.deltaPeriod = deltaPeriod;
    return this;
  }

   /**
   * Get deltaPeriod
   * @return deltaPeriod
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getDeltaPeriod() {
    return deltaPeriod;
  }

  public void setDeltaPeriod(Integer deltaPeriod) {
    this.deltaPeriod = deltaPeriod;
  }

  public ProjectVersionState extraMessage(String extraMessage) {
    this.extraMessage = extraMessage;
    return this;
  }

   /**
   * Get extraMessage
   * @return extraMessage
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExtraMessage() {
    return extraMessage;
  }

  public void setExtraMessage(String extraMessage) {
    this.extraMessage = extraMessage;
  }

  public ProjectVersionState hasCustomIssues(Boolean hasCustomIssues) {
    this.hasCustomIssues = hasCustomIssues;
    return this;
  }

   /**
   * Get hasCustomIssues
   * @return hasCustomIssues
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isHasCustomIssues() {
    return hasCustomIssues;
  }

  public void setHasCustomIssues(Boolean hasCustomIssues) {
    this.hasCustomIssues = hasCustomIssues;
  }

  public ProjectVersionState id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ProjectVersionState issueCountDelta(Integer issueCountDelta) {
    this.issueCountDelta = issueCountDelta;
    return this;
  }

   /**
   * Get issueCountDelta
   * @return issueCountDelta
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getIssueCountDelta() {
    return issueCountDelta;
  }

  public void setIssueCountDelta(Integer issueCountDelta) {
    this.issueCountDelta = issueCountDelta;
  }

  public ProjectVersionState lastFprUploadDate(OffsetDateTime lastFprUploadDate) {
    this.lastFprUploadDate = lastFprUploadDate;
    return this;
  }

   /**
   * Get lastFprUploadDate
   * @return lastFprUploadDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getLastFprUploadDate() {
    return lastFprUploadDate;
  }

  public void setLastFprUploadDate(OffsetDateTime lastFprUploadDate) {
    this.lastFprUploadDate = lastFprUploadDate;
  }

  public ProjectVersionState metricEvaluationDate(OffsetDateTime metricEvaluationDate) {
    this.metricEvaluationDate = metricEvaluationDate;
    return this;
  }

   /**
   * Get metricEvaluationDate
   * @return metricEvaluationDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getMetricEvaluationDate() {
    return metricEvaluationDate;
  }

  public void setMetricEvaluationDate(OffsetDateTime metricEvaluationDate) {
    this.metricEvaluationDate = metricEvaluationDate;
  }

  public ProjectVersionState percentAuditedDelta(Float percentAuditedDelta) {
    this.percentAuditedDelta = percentAuditedDelta;
    return this;
  }

   /**
   * Get percentAuditedDelta
   * @return percentAuditedDelta
  **/
  @ApiModelProperty(required = true, value = "")
  public Float getPercentAuditedDelta() {
    return percentAuditedDelta;
  }

  public void setPercentAuditedDelta(Float percentAuditedDelta) {
    this.percentAuditedDelta = percentAuditedDelta;
  }

  public ProjectVersionState percentCriticalPriorityIssuesAuditedDelta(Float percentCriticalPriorityIssuesAuditedDelta) {
    this.percentCriticalPriorityIssuesAuditedDelta = percentCriticalPriorityIssuesAuditedDelta;
    return this;
  }

   /**
   * Get percentCriticalPriorityIssuesAuditedDelta
   * @return percentCriticalPriorityIssuesAuditedDelta
  **/
  @ApiModelProperty(required = true, value = "")
  public Float getPercentCriticalPriorityIssuesAuditedDelta() {
    return percentCriticalPriorityIssuesAuditedDelta;
  }

  public void setPercentCriticalPriorityIssuesAuditedDelta(Float percentCriticalPriorityIssuesAuditedDelta) {
    this.percentCriticalPriorityIssuesAuditedDelta = percentCriticalPriorityIssuesAuditedDelta;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectVersionState projectVersionState = (ProjectVersionState) o;
    return Objects.equals(this.analysisResultsExist, projectVersionState.analysisResultsExist) &&
        Objects.equals(this.analysisUploadEnabled, projectVersionState.analysisUploadEnabled) &&
        Objects.equals(this.attentionRequired, projectVersionState.attentionRequired) &&
        Objects.equals(this.auditEnabled, projectVersionState.auditEnabled) &&
        Objects.equals(this.batchBugSubmissionExists, projectVersionState.batchBugSubmissionExists) &&
        Objects.equals(this.committed, projectVersionState.committed) &&
        Objects.equals(this.criticalPriorityIssueCountDelta, projectVersionState.criticalPriorityIssueCountDelta) &&
        Objects.equals(this.deltaPeriod, projectVersionState.deltaPeriod) &&
        Objects.equals(this.extraMessage, projectVersionState.extraMessage) &&
        Objects.equals(this.hasCustomIssues, projectVersionState.hasCustomIssues) &&
        Objects.equals(this.id, projectVersionState.id) &&
        Objects.equals(this.issueCountDelta, projectVersionState.issueCountDelta) &&
        Objects.equals(this.lastFprUploadDate, projectVersionState.lastFprUploadDate) &&
        Objects.equals(this.metricEvaluationDate, projectVersionState.metricEvaluationDate) &&
        Objects.equals(this.percentAuditedDelta, projectVersionState.percentAuditedDelta) &&
        Objects.equals(this.percentCriticalPriorityIssuesAuditedDelta, projectVersionState.percentCriticalPriorityIssuesAuditedDelta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysisResultsExist, analysisUploadEnabled, attentionRequired, auditEnabled, batchBugSubmissionExists, committed, criticalPriorityIssueCountDelta, deltaPeriod, extraMessage, hasCustomIssues, id, issueCountDelta, lastFprUploadDate, metricEvaluationDate, percentAuditedDelta, percentCriticalPriorityIssuesAuditedDelta);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectVersionState {\n");
    
    sb.append("    analysisResultsExist: ").append(toIndentedString(analysisResultsExist)).append("\n");
    sb.append("    analysisUploadEnabled: ").append(toIndentedString(analysisUploadEnabled)).append("\n");
    sb.append("    attentionRequired: ").append(toIndentedString(attentionRequired)).append("\n");
    sb.append("    auditEnabled: ").append(toIndentedString(auditEnabled)).append("\n");
    sb.append("    batchBugSubmissionExists: ").append(toIndentedString(batchBugSubmissionExists)).append("\n");
    sb.append("    committed: ").append(toIndentedString(committed)).append("\n");
    sb.append("    criticalPriorityIssueCountDelta: ").append(toIndentedString(criticalPriorityIssueCountDelta)).append("\n");
    sb.append("    deltaPeriod: ").append(toIndentedString(deltaPeriod)).append("\n");
    sb.append("    extraMessage: ").append(toIndentedString(extraMessage)).append("\n");
    sb.append("    hasCustomIssues: ").append(toIndentedString(hasCustomIssues)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    issueCountDelta: ").append(toIndentedString(issueCountDelta)).append("\n");
    sb.append("    lastFprUploadDate: ").append(toIndentedString(lastFprUploadDate)).append("\n");
    sb.append("    metricEvaluationDate: ").append(toIndentedString(metricEvaluationDate)).append("\n");
    sb.append("    percentAuditedDelta: ").append(toIndentedString(percentAuditedDelta)).append("\n");
    sb.append("    percentCriticalPriorityIssuesAuditedDelta: ").append(toIndentedString(percentCriticalPriorityIssuesAuditedDelta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

