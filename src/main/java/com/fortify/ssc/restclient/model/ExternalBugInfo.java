/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * External Bug Info DTO object
 */
@ApiModel(description = "External Bug Info DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class ExternalBugInfo {
  @SerializedName("externalBugDeepLink")
  private String externalBugDeepLink = null;

  @SerializedName("externalBugId")
  private String externalBugId = null;

  @SerializedName("fileBugForSelectAll")
  private Boolean fileBugForSelectAll = null;

  @SerializedName("issueCount")
  private Long issueCount = null;

  @SerializedName("issueInstanceIds")
  private List<String> issueInstanceIds = new ArrayList<String>();

  public ExternalBugInfo externalBugDeepLink(String externalBugDeepLink) {
    this.externalBugDeepLink = externalBugDeepLink;
    return this;
  }

   /**
   * Link to a bug the user can navigate to by clicking the link
   * @return externalBugDeepLink
  **/
  @ApiModelProperty(required = true, value = "Link to a bug the user can navigate to by clicking the link")
  public String getExternalBugDeepLink() {
    return externalBugDeepLink;
  }

  public void setExternalBugDeepLink(String externalBugDeepLink) {
    this.externalBugDeepLink = externalBugDeepLink;
  }

  public ExternalBugInfo externalBugId(String externalBugId) {
    this.externalBugId = externalBugId;
    return this;
  }

   /**
   * ID of the bug
   * @return externalBugId
  **/
  @ApiModelProperty(required = true, value = "ID of the bug")
  public String getExternalBugId() {
    return externalBugId;
  }

  public void setExternalBugId(String externalBugId) {
    this.externalBugId = externalBugId;
  }

  public ExternalBugInfo fileBugForSelectAll(Boolean fileBugForSelectAll) {
    this.fileBugForSelectAll = fileBugForSelectAll;
    return this;
  }

   /**
   * True if user wants to file a bug for all selected issues in UI
   * @return fileBugForSelectAll
  **/
  @ApiModelProperty(example = "false", required = true, value = "True if user wants to file a bug for all selected issues in UI")
  public Boolean isFileBugForSelectAll() {
    return fileBugForSelectAll;
  }

  public void setFileBugForSelectAll(Boolean fileBugForSelectAll) {
    this.fileBugForSelectAll = fileBugForSelectAll;
  }

  public ExternalBugInfo issueCount(Long issueCount) {
    this.issueCount = issueCount;
    return this;
  }

   /**
   * Count of issues for which a bug is filed
   * @return issueCount
  **/
  @ApiModelProperty(required = true, value = "Count of issues for which a bug is filed")
  public Long getIssueCount() {
    return issueCount;
  }

  public void setIssueCount(Long issueCount) {
    this.issueCount = issueCount;
  }

  public ExternalBugInfo issueInstanceIds(List<String> issueInstanceIds) {
    this.issueInstanceIds = issueInstanceIds;
    return this;
  }

  public ExternalBugInfo addIssueInstanceIdsItem(String issueInstanceIdsItem) {
    this.issueInstanceIds.add(issueInstanceIdsItem);
    return this;
  }

   /**
   * List of Issue Instance IDs
   * @return issueInstanceIds
  **/
  @ApiModelProperty(required = true, value = "List of Issue Instance IDs")
  public List<String> getIssueInstanceIds() {
    return issueInstanceIds;
  }

  public void setIssueInstanceIds(List<String> issueInstanceIds) {
    this.issueInstanceIds = issueInstanceIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalBugInfo externalBugInfo = (ExternalBugInfo) o;
    return Objects.equals(this.externalBugDeepLink, externalBugInfo.externalBugDeepLink) &&
        Objects.equals(this.externalBugId, externalBugInfo.externalBugId) &&
        Objects.equals(this.fileBugForSelectAll, externalBugInfo.fileBugForSelectAll) &&
        Objects.equals(this.issueCount, externalBugInfo.issueCount) &&
        Objects.equals(this.issueInstanceIds, externalBugInfo.issueInstanceIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalBugDeepLink, externalBugId, fileBugForSelectAll, issueCount, issueInstanceIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalBugInfo {\n");
    
    sb.append("    externalBugDeepLink: ").append(toIndentedString(externalBugDeepLink)).append("\n");
    sb.append("    externalBugId: ").append(toIndentedString(externalBugId)).append("\n");
    sb.append("    fileBugForSelectAll: ").append(toIndentedString(fileBugForSelectAll)).append("\n");
    sb.append("    issueCount: ").append(toIndentedString(issueCount)).append("\n");
    sb.append("    issueInstanceIds: ").append(toIndentedString(issueInstanceIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

