/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Bug tracker Configuration DTO object
 */
@ApiModel(description = "Bug tracker Configuration DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class BugTrackerConfiguration {
  @SerializedName("description")
  private String description = null;

  @SerializedName("displayLabel")
  private String displayLabel = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("value")
  private String value = null;

  public BugTrackerConfiguration description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @ApiModelProperty(required = true, value = "Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BugTrackerConfiguration displayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

   /**
   * Configuration name
   * @return displayLabel
  **/
  @ApiModelProperty(required = true, value = "Configuration name")
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
  }

  public BugTrackerConfiguration identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Identifier
   * @return identifier
  **/
  @ApiModelProperty(required = true, value = "Identifier")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public BugTrackerConfiguration required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Set to true if configuration is required
   * @return required
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if configuration is required")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public BugTrackerConfiguration value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Configuration value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "Configuration value")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BugTrackerConfiguration bugTrackerConfiguration = (BugTrackerConfiguration) o;
    return Objects.equals(this.description, bugTrackerConfiguration.description) &&
        Objects.equals(this.displayLabel, bugTrackerConfiguration.displayLabel) &&
        Objects.equals(this.identifier, bugTrackerConfiguration.identifier) &&
        Objects.equals(this.required, bugTrackerConfiguration.required) &&
        Objects.equals(this.value, bugTrackerConfiguration.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, displayLabel, identifier, required, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BugTrackerConfiguration {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

