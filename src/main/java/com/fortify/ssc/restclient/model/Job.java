/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Job DTO object
 */
@ApiModel(description = "Job DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class Job {
  @SerializedName("artifactName")
  private String artifactName = null;

  @SerializedName("cancellable")
  private Boolean cancellable = null;

  @SerializedName("executionOrder")
  private Double executionOrder = null;

  @SerializedName("finishTime")
  private OffsetDateTime finishTime = null;

  @SerializedName("jobClass")
  private String jobClass = null;

  @SerializedName("jobData")
  private Object jobData = null;

  @SerializedName("jobGroup")
  private String jobGroup = null;

  @SerializedName("jobName")
  private String jobName = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("projectVersionId")
  private Long projectVersionId = null;

  @SerializedName("projectVersionName")
  private String projectVersionName = null;

  @SerializedName("startTime")
  private OffsetDateTime startTime = null;

  /**
   * Job State
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    PREPARED("PREPARED"),
    
    FINISHED("FINISHED"),
    
    RUNNING("RUNNING"),
    
    WAITING_FOR_WORKER("WAITING_FOR_WORKER"),
    
    FAILED("FAILED"),
    
    CANCELLED("CANCELLED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("userName")
  private String userName = null;

  public Job artifactName(String artifactName) {
    this.artifactName = artifactName;
    return this;
  }

   /**
   * Artifact name related to this job
   * @return artifactName
  **/
  @ApiModelProperty(required = true, value = "Artifact name related to this job")
  public String getArtifactName() {
    return artifactName;
  }

  public void setArtifactName(String artifactName) {
    this.artifactName = artifactName;
  }

  public Job cancellable(Boolean cancellable) {
    this.cancellable = cancellable;
    return this;
  }

   /**
   * Set to true if job is cancelable
   * @return cancellable
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if job is cancelable")
  public Boolean isCancellable() {
    return cancellable;
  }

  public void setCancellable(Boolean cancellable) {
    this.cancellable = cancellable;
  }

  public Job executionOrder(Double executionOrder) {
    this.executionOrder = executionOrder;
    return this;
  }

   /**
   * Job execution order
   * @return executionOrder
  **/
  @ApiModelProperty(required = true, value = "Job execution order")
  public Double getExecutionOrder() {
    return executionOrder;
  }

  public void setExecutionOrder(Double executionOrder) {
    this.executionOrder = executionOrder;
  }

  public Job finishTime(OffsetDateTime finishTime) {
    this.finishTime = finishTime;
    return this;
  }

   /**
   * End time of job
   * @return finishTime
  **/
  @ApiModelProperty(required = true, value = "End time of job")
  public OffsetDateTime getFinishTime() {
    return finishTime;
  }

  public void setFinishTime(OffsetDateTime finishTime) {
    this.finishTime = finishTime;
  }

  public Job jobClass(String jobClass) {
    this.jobClass = jobClass;
    return this;
  }

   /**
   * Job class
   * @return jobClass
  **/
  @ApiModelProperty(required = true, value = "Job class")
  public String getJobClass() {
    return jobClass;
  }

  public void setJobClass(String jobClass) {
    this.jobClass = jobClass;
  }

  public Job jobData(Object jobData) {
    this.jobData = jobData;
    return this;
  }

   /**
   * Job data
   * @return jobData
  **/
  @ApiModelProperty(required = true, value = "Job data")
  public Object getJobData() {
    return jobData;
  }

  public void setJobData(Object jobData) {
    this.jobData = jobData;
  }

  public Job jobGroup(String jobGroup) {
    this.jobGroup = jobGroup;
    return this;
  }

   /**
   * Job group
   * @return jobGroup
  **/
  @ApiModelProperty(required = true, value = "Job group")
  public String getJobGroup() {
    return jobGroup;
  }

  public void setJobGroup(String jobGroup) {
    this.jobGroup = jobGroup;
  }

   /**
   * identifier of job
   * @return jobName
  **/
  @ApiModelProperty(value = "identifier of job")
  public String getJobName() {
    return jobName;
  }

  public Job priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Job priority
   * @return priority
  **/
  @ApiModelProperty(required = true, value = "Job priority")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Job projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Project name related to this job
   * @return projectName
  **/
  @ApiModelProperty(required = true, value = "Project name related to this job")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public Job projectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
    return this;
  }

   /**
   * Project version identifier related to this job
   * @return projectVersionId
  **/
  @ApiModelProperty(required = true, value = "Project version identifier related to this job")
  public Long getProjectVersionId() {
    return projectVersionId;
  }

  public void setProjectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
  }

  public Job projectVersionName(String projectVersionName) {
    this.projectVersionName = projectVersionName;
    return this;
  }

   /**
   * Project version name related to this job
   * @return projectVersionName
  **/
  @ApiModelProperty(required = true, value = "Project version name related to this job")
  public String getProjectVersionName() {
    return projectVersionName;
  }

  public void setProjectVersionName(String projectVersionName) {
    this.projectVersionName = projectVersionName;
  }

  public Job startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Start time of job
   * @return startTime
  **/
  @ApiModelProperty(required = true, value = "Start time of job")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public Job state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Job State
   * @return state
  **/
  @ApiModelProperty(required = true, value = "Job State")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public Job userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Name of user this job was created by
   * @return userName
  **/
  @ApiModelProperty(required = true, value = "Name of user this job was created by")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Job job = (Job) o;
    return Objects.equals(this.artifactName, job.artifactName) &&
        Objects.equals(this.cancellable, job.cancellable) &&
        Objects.equals(this.executionOrder, job.executionOrder) &&
        Objects.equals(this.finishTime, job.finishTime) &&
        Objects.equals(this.jobClass, job.jobClass) &&
        Objects.equals(this.jobData, job.jobData) &&
        Objects.equals(this.jobGroup, job.jobGroup) &&
        Objects.equals(this.jobName, job.jobName) &&
        Objects.equals(this.priority, job.priority) &&
        Objects.equals(this.projectName, job.projectName) &&
        Objects.equals(this.projectVersionId, job.projectVersionId) &&
        Objects.equals(this.projectVersionName, job.projectVersionName) &&
        Objects.equals(this.startTime, job.startTime) &&
        Objects.equals(this.state, job.state) &&
        Objects.equals(this.userName, job.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactName, cancellable, executionOrder, finishTime, jobClass, jobData, jobGroup, jobName, priority, projectName, projectVersionId, projectVersionName, startTime, state, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Job {\n");
    
    sb.append("    artifactName: ").append(toIndentedString(artifactName)).append("\n");
    sb.append("    cancellable: ").append(toIndentedString(cancellable)).append("\n");
    sb.append("    executionOrder: ").append(toIndentedString(executionOrder)).append("\n");
    sb.append("    finishTime: ").append(toIndentedString(finishTime)).append("\n");
    sb.append("    jobClass: ").append(toIndentedString(jobClass)).append("\n");
    sb.append("    jobData: ").append(toIndentedString(jobData)).append("\n");
    sb.append("    jobGroup: ").append(toIndentedString(jobGroup)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectVersionId: ").append(toIndentedString(projectVersionId)).append("\n");
    sb.append("    projectVersionName: ").append(toIndentedString(projectVersionName)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

