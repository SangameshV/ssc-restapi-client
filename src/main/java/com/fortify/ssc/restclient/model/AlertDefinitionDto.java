/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.AlertTriggerDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Alert definitions can include variable or performance indicator to determine when Software Security Center is to generate an alert notification in the Todo List on the Dashboard.
 */
@ApiModel(description = "Alert definitions can include variable or performance indicator to determine when Software Security Center is to generate an alert notification in the Todo List on the Dashboard.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class AlertDefinitionDto {
  @SerializedName("alertAllChildren")
  private Boolean alertAllChildren = null;

  @SerializedName("alertStakeholders")
  private Boolean alertStakeholders = null;

  @SerializedName("alertTriggers")
  private List<AlertTriggerDto> alertTriggers = new ArrayList<AlertTriggerDto>();

  @SerializedName("createdBy")
  private String createdBy = null;

  @SerializedName("creationDate")
  private OffsetDateTime creationDate = null;

  @SerializedName("customMessage")
  private String customMessage = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("monitorAllApps")
  private Boolean monitorAllApps = null;

  @SerializedName("monitoredEntityName")
  private String monitoredEntityName = null;

  /**
   * Gets or Sets monitoredEntityType
   */
  @JsonAdapter(MonitoredEntityTypeEnum.Adapter.class)
  public enum MonitoredEntityTypeEnum {
    RT_INSTANCE("RT_INSTANCE"),
    
    REQ_INSTANCE("REQ_INSTANCE"),
    
    ACTIVITY_INSTANCE("ACTIVITY_INSTANCE"),
    
    MEASUREMENT_AGENT("MEASUREMENT_AGENT"),
    
    VARIABLE("VARIABLE"),
    
    RUNTIME_ALERT("RUNTIME_ALERT"),
    
    EVENT("EVENT"),
    
    SCHEDULED_ALERT("SCHEDULED_ALERT");

    private String value;

    MonitoredEntityTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MonitoredEntityTypeEnum fromValue(String text) {
      for (MonitoredEntityTypeEnum b : MonitoredEntityTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MonitoredEntityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MonitoredEntityTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MonitoredEntityTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MonitoredEntityTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("monitoredEntityType")
  private MonitoredEntityTypeEnum monitoredEntityType = null;

  @SerializedName("monitoredInstanceId")
  private Long monitoredInstanceId = null;

  @SerializedName("monitorsProjectVersions")
  private Boolean monitorsProjectVersions = null;

  @SerializedName("monitorsRuntimeApp")
  private Boolean monitorsRuntimeApp = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("projectVersionIds")
  private List<Long> projectVersionIds = null;

  /**
   * Gets or Sets recipientType
   */
  @JsonAdapter(RecipientTypeEnum.Adapter.class)
  public enum RecipientTypeEnum {
    ME_ONLY("ME_ONLY"),
    
    PROCESS_ENTITY_STAKEHOLDERS("PROCESS_ENTITY_STAKEHOLDERS"),
    
    ALL_USERS("ALL_USERS"),
    
    ALL_SYSTEM_USERS("ALL_SYSTEM_USERS");

    private String value;

    RecipientTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecipientTypeEnum fromValue(String text) {
      for (RecipientTypeEnum b : RecipientTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RecipientTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecipientTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecipientTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RecipientTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("recipientType")
  private RecipientTypeEnum recipientType = null;

  @SerializedName("remindPeriodically")
  private Boolean remindPeriodically = null;

  @SerializedName("reminderPeriod")
  private Integer reminderPeriod = null;

  @SerializedName("startAtDueDate")
  private Boolean startAtDueDate = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("triggerDescription")
  private String triggerDescription = null;

  @SerializedName("triggerDescriptionName")
  private String triggerDescriptionName = null;

  @SerializedName("triggerDescriptionOperation")
  private String triggerDescriptionOperation = null;

  @SerializedName("triggerDescriptionValue")
  private String triggerDescriptionValue = null;

  @SerializedName("userCanModify")
  private Boolean userCanModify = null;

  public AlertDefinitionDto alertAllChildren(Boolean alertAllChildren) {
    this.alertAllChildren = alertAllChildren;
    return this;
  }

   /**
   * Get alertAllChildren
   * @return alertAllChildren
  **/
  @ApiModelProperty(value = "")
  public Boolean isAlertAllChildren() {
    return alertAllChildren;
  }

  public void setAlertAllChildren(Boolean alertAllChildren) {
    this.alertAllChildren = alertAllChildren;
  }

  public AlertDefinitionDto alertStakeholders(Boolean alertStakeholders) {
    this.alertStakeholders = alertStakeholders;
    return this;
  }

   /**
   * Get alertStakeholders
   * @return alertStakeholders
  **/
  @ApiModelProperty(value = "")
  public Boolean isAlertStakeholders() {
    return alertStakeholders;
  }

  public void setAlertStakeholders(Boolean alertStakeholders) {
    this.alertStakeholders = alertStakeholders;
  }

  public AlertDefinitionDto alertTriggers(List<AlertTriggerDto> alertTriggers) {
    this.alertTriggers = alertTriggers;
    return this;
  }

  public AlertDefinitionDto addAlertTriggersItem(AlertTriggerDto alertTriggersItem) {
    this.alertTriggers.add(alertTriggersItem);
    return this;
  }

   /**
   * Get alertTriggers
   * @return alertTriggers
  **/
  @ApiModelProperty(required = true, value = "")
  public List<AlertTriggerDto> getAlertTriggers() {
    return alertTriggers;
  }

  public void setAlertTriggers(List<AlertTriggerDto> alertTriggers) {
    this.alertTriggers = alertTriggers;
  }

  public AlertDefinitionDto createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public AlertDefinitionDto creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public AlertDefinitionDto customMessage(String customMessage) {
    this.customMessage = customMessage;
    return this;
  }

   /**
   * Required field for Scheduled alerts, Optional for other types
   * @return customMessage
  **/
  @ApiModelProperty(required = true, value = "Required field for Scheduled alerts, Optional for other types")
  public String getCustomMessage() {
    return customMessage;
  }

  public void setCustomMessage(String customMessage) {
    this.customMessage = customMessage;
  }

  public AlertDefinitionDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AlertDefinitionDto enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public AlertDefinitionDto endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public AlertDefinitionDto monitorAllApps(Boolean monitorAllApps) {
    this.monitorAllApps = monitorAllApps;
    return this;
  }

   /**
   * Get monitorAllApps
   * @return monitorAllApps
  **/
  @ApiModelProperty(value = "")
  public Boolean isMonitorAllApps() {
    return monitorAllApps;
  }

  public void setMonitorAllApps(Boolean monitorAllApps) {
    this.monitorAllApps = monitorAllApps;
  }

  public AlertDefinitionDto monitoredEntityName(String monitoredEntityName) {
    this.monitoredEntityName = monitoredEntityName;
    return this;
  }

   /**
   * Get monitoredEntityName
   * @return monitoredEntityName
  **/
  @ApiModelProperty(value = "")
  public String getMonitoredEntityName() {
    return monitoredEntityName;
  }

  public void setMonitoredEntityName(String monitoredEntityName) {
    this.monitoredEntityName = monitoredEntityName;
  }

  public AlertDefinitionDto monitoredEntityType(MonitoredEntityTypeEnum monitoredEntityType) {
    this.monitoredEntityType = monitoredEntityType;
    return this;
  }

   /**
   * Get monitoredEntityType
   * @return monitoredEntityType
  **/
  @ApiModelProperty(required = true, value = "")
  public MonitoredEntityTypeEnum getMonitoredEntityType() {
    return monitoredEntityType;
  }

  public void setMonitoredEntityType(MonitoredEntityTypeEnum monitoredEntityType) {
    this.monitoredEntityType = monitoredEntityType;
  }

  public AlertDefinitionDto monitoredInstanceId(Long monitoredInstanceId) {
    this.monitoredInstanceId = monitoredInstanceId;
    return this;
  }

   /**
   * Get monitoredInstanceId
   * @return monitoredInstanceId
  **/
  @ApiModelProperty(value = "")
  public Long getMonitoredInstanceId() {
    return monitoredInstanceId;
  }

  public void setMonitoredInstanceId(Long monitoredInstanceId) {
    this.monitoredInstanceId = monitoredInstanceId;
  }

  public AlertDefinitionDto monitorsProjectVersions(Boolean monitorsProjectVersions) {
    this.monitorsProjectVersions = monitorsProjectVersions;
    return this;
  }

   /**
   * Get monitorsProjectVersions
   * @return monitorsProjectVersions
  **/
  @ApiModelProperty(value = "")
  public Boolean isMonitorsProjectVersions() {
    return monitorsProjectVersions;
  }

  public void setMonitorsProjectVersions(Boolean monitorsProjectVersions) {
    this.monitorsProjectVersions = monitorsProjectVersions;
  }

  public AlertDefinitionDto monitorsRuntimeApp(Boolean monitorsRuntimeApp) {
    this.monitorsRuntimeApp = monitorsRuntimeApp;
    return this;
  }

   /**
   * Get monitorsRuntimeApp
   * @return monitorsRuntimeApp
  **/
  @ApiModelProperty(value = "")
  public Boolean isMonitorsRuntimeApp() {
    return monitorsRuntimeApp;
  }

  public void setMonitorsRuntimeApp(Boolean monitorsRuntimeApp) {
    this.monitorsRuntimeApp = monitorsRuntimeApp;
  }

  public AlertDefinitionDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AlertDefinitionDto projectVersionIds(List<Long> projectVersionIds) {
    this.projectVersionIds = projectVersionIds;
    return this;
  }

  public AlertDefinitionDto addProjectVersionIdsItem(Long projectVersionIdsItem) {
    if (this.projectVersionIds == null) {
      this.projectVersionIds = new ArrayList<Long>();
    }
    this.projectVersionIds.add(projectVersionIdsItem);
    return this;
  }

   /**
   * Get projectVersionIds
   * @return projectVersionIds
  **/
  @ApiModelProperty(value = "")
  public List<Long> getProjectVersionIds() {
    return projectVersionIds;
  }

  public void setProjectVersionIds(List<Long> projectVersionIds) {
    this.projectVersionIds = projectVersionIds;
  }

  public AlertDefinitionDto recipientType(RecipientTypeEnum recipientType) {
    this.recipientType = recipientType;
    return this;
  }

   /**
   * Get recipientType
   * @return recipientType
  **/
  @ApiModelProperty(required = true, value = "")
  public RecipientTypeEnum getRecipientType() {
    return recipientType;
  }

  public void setRecipientType(RecipientTypeEnum recipientType) {
    this.recipientType = recipientType;
  }

  public AlertDefinitionDto remindPeriodically(Boolean remindPeriodically) {
    this.remindPeriodically = remindPeriodically;
    return this;
  }

   /**
   * Get remindPeriodically
   * @return remindPeriodically
  **/
  @ApiModelProperty(value = "")
  public Boolean isRemindPeriodically() {
    return remindPeriodically;
  }

  public void setRemindPeriodically(Boolean remindPeriodically) {
    this.remindPeriodically = remindPeriodically;
  }

  public AlertDefinitionDto reminderPeriod(Integer reminderPeriod) {
    this.reminderPeriod = reminderPeriod;
    return this;
  }

   /**
   * Get reminderPeriod
   * @return reminderPeriod
  **/
  @ApiModelProperty(value = "")
  public Integer getReminderPeriod() {
    return reminderPeriod;
  }

  public void setReminderPeriod(Integer reminderPeriod) {
    this.reminderPeriod = reminderPeriod;
  }

  public AlertDefinitionDto startAtDueDate(Boolean startAtDueDate) {
    this.startAtDueDate = startAtDueDate;
    return this;
  }

   /**
   * Get startAtDueDate
   * @return startAtDueDate
  **/
  @ApiModelProperty(value = "")
  public Boolean isStartAtDueDate() {
    return startAtDueDate;
  }

  public void setStartAtDueDate(Boolean startAtDueDate) {
    this.startAtDueDate = startAtDueDate;
  }

  public AlertDefinitionDto startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public AlertDefinitionDto triggerDescription(String triggerDescription) {
    this.triggerDescription = triggerDescription;
    return this;
  }

   /**
   * Get triggerDescription
   * @return triggerDescription
  **/
  @ApiModelProperty(value = "")
  public String getTriggerDescription() {
    return triggerDescription;
  }

  public void setTriggerDescription(String triggerDescription) {
    this.triggerDescription = triggerDescription;
  }

  public AlertDefinitionDto triggerDescriptionName(String triggerDescriptionName) {
    this.triggerDescriptionName = triggerDescriptionName;
    return this;
  }

   /**
   * Get triggerDescriptionName
   * @return triggerDescriptionName
  **/
  @ApiModelProperty(value = "")
  public String getTriggerDescriptionName() {
    return triggerDescriptionName;
  }

  public void setTriggerDescriptionName(String triggerDescriptionName) {
    this.triggerDescriptionName = triggerDescriptionName;
  }

  public AlertDefinitionDto triggerDescriptionOperation(String triggerDescriptionOperation) {
    this.triggerDescriptionOperation = triggerDescriptionOperation;
    return this;
  }

   /**
   * Get triggerDescriptionOperation
   * @return triggerDescriptionOperation
  **/
  @ApiModelProperty(value = "")
  public String getTriggerDescriptionOperation() {
    return triggerDescriptionOperation;
  }

  public void setTriggerDescriptionOperation(String triggerDescriptionOperation) {
    this.triggerDescriptionOperation = triggerDescriptionOperation;
  }

  public AlertDefinitionDto triggerDescriptionValue(String triggerDescriptionValue) {
    this.triggerDescriptionValue = triggerDescriptionValue;
    return this;
  }

   /**
   * Get triggerDescriptionValue
   * @return triggerDescriptionValue
  **/
  @ApiModelProperty(value = "")
  public String getTriggerDescriptionValue() {
    return triggerDescriptionValue;
  }

  public void setTriggerDescriptionValue(String triggerDescriptionValue) {
    this.triggerDescriptionValue = triggerDescriptionValue;
  }

  public AlertDefinitionDto userCanModify(Boolean userCanModify) {
    this.userCanModify = userCanModify;
    return this;
  }

   /**
   * Get userCanModify
   * @return userCanModify
  **/
  @ApiModelProperty(value = "")
  public Boolean isUserCanModify() {
    return userCanModify;
  }

  public void setUserCanModify(Boolean userCanModify) {
    this.userCanModify = userCanModify;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertDefinitionDto alertDefinitionDto = (AlertDefinitionDto) o;
    return Objects.equals(this.alertAllChildren, alertDefinitionDto.alertAllChildren) &&
        Objects.equals(this.alertStakeholders, alertDefinitionDto.alertStakeholders) &&
        Objects.equals(this.alertTriggers, alertDefinitionDto.alertTriggers) &&
        Objects.equals(this.createdBy, alertDefinitionDto.createdBy) &&
        Objects.equals(this.creationDate, alertDefinitionDto.creationDate) &&
        Objects.equals(this.customMessage, alertDefinitionDto.customMessage) &&
        Objects.equals(this.description, alertDefinitionDto.description) &&
        Objects.equals(this.enabled, alertDefinitionDto.enabled) &&
        Objects.equals(this.endDate, alertDefinitionDto.endDate) &&
        Objects.equals(this.id, alertDefinitionDto.id) &&
        Objects.equals(this.monitorAllApps, alertDefinitionDto.monitorAllApps) &&
        Objects.equals(this.monitoredEntityName, alertDefinitionDto.monitoredEntityName) &&
        Objects.equals(this.monitoredEntityType, alertDefinitionDto.monitoredEntityType) &&
        Objects.equals(this.monitoredInstanceId, alertDefinitionDto.monitoredInstanceId) &&
        Objects.equals(this.monitorsProjectVersions, alertDefinitionDto.monitorsProjectVersions) &&
        Objects.equals(this.monitorsRuntimeApp, alertDefinitionDto.monitorsRuntimeApp) &&
        Objects.equals(this.name, alertDefinitionDto.name) &&
        Objects.equals(this.projectVersionIds, alertDefinitionDto.projectVersionIds) &&
        Objects.equals(this.recipientType, alertDefinitionDto.recipientType) &&
        Objects.equals(this.remindPeriodically, alertDefinitionDto.remindPeriodically) &&
        Objects.equals(this.reminderPeriod, alertDefinitionDto.reminderPeriod) &&
        Objects.equals(this.startAtDueDate, alertDefinitionDto.startAtDueDate) &&
        Objects.equals(this.startDate, alertDefinitionDto.startDate) &&
        Objects.equals(this.triggerDescription, alertDefinitionDto.triggerDescription) &&
        Objects.equals(this.triggerDescriptionName, alertDefinitionDto.triggerDescriptionName) &&
        Objects.equals(this.triggerDescriptionOperation, alertDefinitionDto.triggerDescriptionOperation) &&
        Objects.equals(this.triggerDescriptionValue, alertDefinitionDto.triggerDescriptionValue) &&
        Objects.equals(this.userCanModify, alertDefinitionDto.userCanModify);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertAllChildren, alertStakeholders, alertTriggers, createdBy, creationDate, customMessage, description, enabled, endDate, id, monitorAllApps, monitoredEntityName, monitoredEntityType, monitoredInstanceId, monitorsProjectVersions, monitorsRuntimeApp, name, projectVersionIds, recipientType, remindPeriodically, reminderPeriod, startAtDueDate, startDate, triggerDescription, triggerDescriptionName, triggerDescriptionOperation, triggerDescriptionValue, userCanModify);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertDefinitionDto {\n");
    
    sb.append("    alertAllChildren: ").append(toIndentedString(alertAllChildren)).append("\n");
    sb.append("    alertStakeholders: ").append(toIndentedString(alertStakeholders)).append("\n");
    sb.append("    alertTriggers: ").append(toIndentedString(alertTriggers)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customMessage: ").append(toIndentedString(customMessage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    monitorAllApps: ").append(toIndentedString(monitorAllApps)).append("\n");
    sb.append("    monitoredEntityName: ").append(toIndentedString(monitoredEntityName)).append("\n");
    sb.append("    monitoredEntityType: ").append(toIndentedString(monitoredEntityType)).append("\n");
    sb.append("    monitoredInstanceId: ").append(toIndentedString(monitoredInstanceId)).append("\n");
    sb.append("    monitorsProjectVersions: ").append(toIndentedString(monitorsProjectVersions)).append("\n");
    sb.append("    monitorsRuntimeApp: ").append(toIndentedString(monitorsRuntimeApp)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectVersionIds: ").append(toIndentedString(projectVersionIds)).append("\n");
    sb.append("    recipientType: ").append(toIndentedString(recipientType)).append("\n");
    sb.append("    remindPeriodically: ").append(toIndentedString(remindPeriodically)).append("\n");
    sb.append("    reminderPeriod: ").append(toIndentedString(reminderPeriod)).append("\n");
    sb.append("    startAtDueDate: ").append(toIndentedString(startAtDueDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    triggerDescription: ").append(toIndentedString(triggerDescription)).append("\n");
    sb.append("    triggerDescriptionName: ").append(toIndentedString(triggerDescriptionName)).append("\n");
    sb.append("    triggerDescriptionOperation: ").append(toIndentedString(triggerDescriptionOperation)).append("\n");
    sb.append("    triggerDescriptionValue: ").append(toIndentedString(triggerDescriptionValue)).append("\n");
    sb.append("    userCanModify: ").append(toIndentedString(userCanModify)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

