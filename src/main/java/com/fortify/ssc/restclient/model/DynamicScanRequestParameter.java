/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.DynamicScanRequestParameterDefinition;
import com.fortify.ssc.restclient.model.DynamicScanRequestParameterOption;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Dynamic Scan Request Parameter DTO object
 */
@ApiModel(description = "Dynamic Scan Request Parameter DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class DynamicScanRequestParameter {
  @SerializedName("fileValueDocumentInfoId")
  private Long fileValueDocumentInfoId = null;

  @SerializedName("fileValueName")
  private String fileValueName = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("objectVersion")
  private Integer objectVersion = null;

  @SerializedName("parameterDefinition")
  private DynamicScanRequestParameterDefinition parameterDefinition = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("valueOptions")
  private List<DynamicScanRequestParameterOption> valueOptions = null;

  @SerializedName("values")
  private List<DynamicScanRequestParameterOption> values = null;

  public DynamicScanRequestParameter fileValueDocumentInfoId(Long fileValueDocumentInfoId) {
    this.fileValueDocumentInfoId = fileValueDocumentInfoId;
    return this;
  }

   /**
   * The file value document info id for an upload file
   * @return fileValueDocumentInfoId
  **/
  @ApiModelProperty(value = "The file value document info id for an upload file")
  public Long getFileValueDocumentInfoId() {
    return fileValueDocumentInfoId;
  }

  public void setFileValueDocumentInfoId(Long fileValueDocumentInfoId) {
    this.fileValueDocumentInfoId = fileValueDocumentInfoId;
  }

  public DynamicScanRequestParameter fileValueName(String fileValueName) {
    this.fileValueName = fileValueName;
    return this;
  }

   /**
   * The name of an uploaded file
   * @return fileValueName
  **/
  @ApiModelProperty(value = "The name of an uploaded file")
  public String getFileValueName() {
    return fileValueName;
  }

  public void setFileValueName(String fileValueName) {
    this.fileValueName = fileValueName;
  }

  public DynamicScanRequestParameter id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the parameter
   * @return id
  **/
  @ApiModelProperty(value = "The id of the parameter")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DynamicScanRequestParameter objectVersion(Integer objectVersion) {
    this.objectVersion = objectVersion;
    return this;
  }

   /**
   * The objecct version of this parameter
   * @return objectVersion
  **/
  @ApiModelProperty(value = "The objecct version of this parameter")
  public Integer getObjectVersion() {
    return objectVersion;
  }

  public void setObjectVersion(Integer objectVersion) {
    this.objectVersion = objectVersion;
  }

  public DynamicScanRequestParameter parameterDefinition(DynamicScanRequestParameterDefinition parameterDefinition) {
    this.parameterDefinition = parameterDefinition;
    return this;
  }

   /**
   * The definition for this parameter
   * @return parameterDefinition
  **/
  @ApiModelProperty(value = "The definition for this parameter")
  public DynamicScanRequestParameterDefinition getParameterDefinition() {
    return parameterDefinition;
  }

  public void setParameterDefinition(DynamicScanRequestParameterDefinition parameterDefinition) {
    this.parameterDefinition = parameterDefinition;
  }

  public DynamicScanRequestParameter value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the parameter
   * @return value
  **/
  @ApiModelProperty(value = "The value of the parameter")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public DynamicScanRequestParameter valueOptions(List<DynamicScanRequestParameterOption> valueOptions) {
    this.valueOptions = valueOptions;
    return this;
  }

  public DynamicScanRequestParameter addValueOptionsItem(DynamicScanRequestParameterOption valueOptionsItem) {
    if (this.valueOptions == null) {
      this.valueOptions = new ArrayList<DynamicScanRequestParameterOption>();
    }
    this.valueOptions.add(valueOptionsItem);
    return this;
  }

   /**
   * The name of the uploaded file
   * @return valueOptions
  **/
  @ApiModelProperty(value = "The name of the uploaded file")
  public List<DynamicScanRequestParameterOption> getValueOptions() {
    return valueOptions;
  }

  public void setValueOptions(List<DynamicScanRequestParameterOption> valueOptions) {
    this.valueOptions = valueOptions;
  }

  public DynamicScanRequestParameter values(List<DynamicScanRequestParameterOption> values) {
    this.values = values;
    return this;
  }

  public DynamicScanRequestParameter addValuesItem(DynamicScanRequestParameterOption valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<DynamicScanRequestParameterOption>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * A list of possible values for this parameter
   * @return values
  **/
  @ApiModelProperty(value = "A list of possible values for this parameter")
  public List<DynamicScanRequestParameterOption> getValues() {
    return values;
  }

  public void setValues(List<DynamicScanRequestParameterOption> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicScanRequestParameter dynamicScanRequestParameter = (DynamicScanRequestParameter) o;
    return Objects.equals(this.fileValueDocumentInfoId, dynamicScanRequestParameter.fileValueDocumentInfoId) &&
        Objects.equals(this.fileValueName, dynamicScanRequestParameter.fileValueName) &&
        Objects.equals(this.id, dynamicScanRequestParameter.id) &&
        Objects.equals(this.objectVersion, dynamicScanRequestParameter.objectVersion) &&
        Objects.equals(this.parameterDefinition, dynamicScanRequestParameter.parameterDefinition) &&
        Objects.equals(this.value, dynamicScanRequestParameter.value) &&
        Objects.equals(this.valueOptions, dynamicScanRequestParameter.valueOptions) &&
        Objects.equals(this.values, dynamicScanRequestParameter.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileValueDocumentInfoId, fileValueName, id, objectVersion, parameterDefinition, value, valueOptions, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicScanRequestParameter {\n");
    
    sb.append("    fileValueDocumentInfoId: ").append(toIndentedString(fileValueDocumentInfoId)).append("\n");
    sb.append("    fileValueName: ").append(toIndentedString(fileValueName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    objectVersion: ").append(toIndentedString(objectVersion)).append("\n");
    sb.append("    parameterDefinition: ").append(toIndentedString(parameterDefinition)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    valueOptions: ").append(toIndentedString(valueOptions)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

