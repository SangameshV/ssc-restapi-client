/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.EmbeddedReportDefinition;
import com.fortify.ssc.restclient.model.InputReportParameter;
import com.fortify.ssc.restclient.model.ReportAuthEntity;
import com.fortify.ssc.restclient.model.ReportProject;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Saved Report DTO object
 */
@ApiModel(description = "Saved Report DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class SavedReport {
  @SerializedName("_embed")
  private EmbeddedReportDefinition embed = null;

  @SerializedName("authEntity")
  private ReportAuthEntity authEntity = null;

  /**
   * Saved report output format
   */
  @JsonAdapter(FormatEnum.Adapter.class)
  public enum FormatEnum {
    PDF("PDF"),
    
    DOC("DOC"),
    
    XLS("XLS");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String text) {
      for (FormatEnum b : FormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FormatEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("format")
  private FormatEnum format = null;

  @SerializedName("formatDefaultText")
  private String formatDefaultText = null;

  @SerializedName("generationDate")
  private OffsetDateTime generationDate = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("inputReportParameters")
  private List<InputReportParameter> inputReportParameters = null;

  @SerializedName("isPublished")
  private Boolean isPublished = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("projects")
  private List<ReportProject> projects = new ArrayList<ReportProject>();

  @SerializedName("published")
  private Boolean published = null;

  @SerializedName("reportDefinitionId")
  private Long reportDefinitionId = null;

  @SerializedName("reportProjectsCount")
  private Integer reportProjectsCount = null;

  /**
   * Saved report status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    SCHEDULED_FOR_PROCESSING("Scheduled for Processing"),
    
    PROCESSING("Processing"),
    
    PROCESSING_COMPLETE("Processing Complete"),
    
    ERROR_PROCESSING("Error Processing");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("statusDefaultText")
  private String statusDefaultText = null;

  /**
   * Saved report type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    APPLICATION_REPORTS("Application Reports"),
    
    SSA_APPLICATION_REPORTS("SSA Application Reports"),
    
    SSA_PORTFOLIO_REPORTS("SSA Portfolio Reports"),
    
    PORTFOLIO_REPORTS("Portfolio Reports"),
    
    COMPLIANCE_REPORTS("Compliance Reports"),
    
    ISSUE_REPORTS("Issue Reports"),
    
    RUNTIME_APPLICATION_REPORTS("Runtime Application Reports");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("typeDefaultText")
  private String typeDefaultText = null;

  public SavedReport embed(EmbeddedReportDefinition embed) {
    this.embed = embed;
    return this;
  }

   /**
   * Get embed
   * @return embed
  **/
  @ApiModelProperty(value = "")
  public EmbeddedReportDefinition getEmbed() {
    return embed;
  }

  public void setEmbed(EmbeddedReportDefinition embed) {
    this.embed = embed;
  }

  public SavedReport authEntity(ReportAuthEntity authEntity) {
    this.authEntity = authEntity;
    return this;
  }

   /**
   * The Fortify User or Ldap User associated with the report
   * @return authEntity
  **/
  @ApiModelProperty(value = "The Fortify User or Ldap User associated with the report")
  public ReportAuthEntity getAuthEntity() {
    return authEntity;
  }

  public void setAuthEntity(ReportAuthEntity authEntity) {
    this.authEntity = authEntity;
  }

  public SavedReport format(FormatEnum format) {
    this.format = format;
    return this;
  }

   /**
   * Saved report output format
   * @return format
  **/
  @ApiModelProperty(required = true, value = "Saved report output format")
  public FormatEnum getFormat() {
    return format;
  }

  public void setFormat(FormatEnum format) {
    this.format = format;
  }

  public SavedReport formatDefaultText(String formatDefaultText) {
    this.formatDefaultText = formatDefaultText;
    return this;
  }

   /**
   * Saved report output format default text
   * @return formatDefaultText
  **/
  @ApiModelProperty(value = "Saved report output format default text")
  public String getFormatDefaultText() {
    return formatDefaultText;
  }

  public void setFormatDefaultText(String formatDefaultText) {
    this.formatDefaultText = formatDefaultText;
  }

  public SavedReport generationDate(OffsetDateTime generationDate) {
    this.generationDate = generationDate;
    return this;
  }

   /**
   * Generation date
   * @return generationDate
  **/
  @ApiModelProperty(value = "Generation date")
  public OffsetDateTime getGenerationDate() {
    return generationDate;
  }

  public void setGenerationDate(OffsetDateTime generationDate) {
    this.generationDate = generationDate;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public SavedReport inputReportParameters(List<InputReportParameter> inputReportParameters) {
    this.inputReportParameters = inputReportParameters;
    return this;
  }

  public SavedReport addInputReportParametersItem(InputReportParameter inputReportParametersItem) {
    if (this.inputReportParameters == null) {
      this.inputReportParameters = new ArrayList<InputReportParameter>();
    }
    this.inputReportParameters.add(inputReportParametersItem);
    return this;
  }

   /**
   * List of report parameters
   * @return inputReportParameters
  **/
  @ApiModelProperty(value = "List of report parameters")
  public List<InputReportParameter> getInputReportParameters() {
    return inputReportParameters;
  }

  public void setInputReportParameters(List<InputReportParameter> inputReportParameters) {
    this.inputReportParameters = inputReportParameters;
  }

  public SavedReport isPublished(Boolean isPublished) {
    this.isPublished = isPublished;
    return this;
  }

   /**
   * Indicates whether saved report is published
   * @return isPublished
  **/
  @ApiModelProperty(example = "false", value = "Indicates whether saved report is published")
  public Boolean isIsPublished() {
    return isPublished;
  }

  public void setIsPublished(Boolean isPublished) {
    this.isPublished = isPublished;
  }

  public SavedReport name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SavedReport note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Saved report notes
   * @return note
  **/
  @ApiModelProperty(value = "Saved report notes")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public SavedReport projects(List<ReportProject> projects) {
    this.projects = projects;
    return this;
  }

  public SavedReport addProjectsItem(ReportProject projectsItem) {
    this.projects.add(projectsItem);
    return this;
  }

   /**
   * List of project versions
   * @return projects
  **/
  @ApiModelProperty(required = true, value = "List of project versions")
  public List<ReportProject> getProjects() {
    return projects;
  }

  public void setProjects(List<ReportProject> projects) {
    this.projects = projects;
  }

  public SavedReport published(Boolean published) {
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
  @ApiModelProperty(value = "")
  public Boolean isPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }

  public SavedReport reportDefinitionId(Long reportDefinitionId) {
    this.reportDefinitionId = reportDefinitionId;
    return this;
  }

   /**
   * Report definition identifier
   * @return reportDefinitionId
  **/
  @ApiModelProperty(required = true, value = "Report definition identifier")
  public Long getReportDefinitionId() {
    return reportDefinitionId;
  }

  public void setReportDefinitionId(Long reportDefinitionId) {
    this.reportDefinitionId = reportDefinitionId;
  }

  public SavedReport reportProjectsCount(Integer reportProjectsCount) {
    this.reportProjectsCount = reportProjectsCount;
    return this;
  }

   /**
   * Count of report projects
   * @return reportProjectsCount
  **/
  @ApiModelProperty(value = "Count of report projects")
  public Integer getReportProjectsCount() {
    return reportProjectsCount;
  }

  public void setReportProjectsCount(Integer reportProjectsCount) {
    this.reportProjectsCount = reportProjectsCount;
  }

  public SavedReport status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Saved report status
   * @return status
  **/
  @ApiModelProperty(value = "Saved report status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public SavedReport statusDefaultText(String statusDefaultText) {
    this.statusDefaultText = statusDefaultText;
    return this;
  }

   /**
   * Saved report status default text
   * @return statusDefaultText
  **/
  @ApiModelProperty(value = "Saved report status default text")
  public String getStatusDefaultText() {
    return statusDefaultText;
  }

  public void setStatusDefaultText(String statusDefaultText) {
    this.statusDefaultText = statusDefaultText;
  }

  public SavedReport type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Saved report type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Saved report type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public SavedReport typeDefaultText(String typeDefaultText) {
    this.typeDefaultText = typeDefaultText;
    return this;
  }

   /**
   * Saved report type default text
   * @return typeDefaultText
  **/
  @ApiModelProperty(value = "Saved report type default text")
  public String getTypeDefaultText() {
    return typeDefaultText;
  }

  public void setTypeDefaultText(String typeDefaultText) {
    this.typeDefaultText = typeDefaultText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SavedReport savedReport = (SavedReport) o;
    return Objects.equals(this.embed, savedReport.embed) &&
        Objects.equals(this.authEntity, savedReport.authEntity) &&
        Objects.equals(this.format, savedReport.format) &&
        Objects.equals(this.formatDefaultText, savedReport.formatDefaultText) &&
        Objects.equals(this.generationDate, savedReport.generationDate) &&
        Objects.equals(this.id, savedReport.id) &&
        Objects.equals(this.inputReportParameters, savedReport.inputReportParameters) &&
        Objects.equals(this.isPublished, savedReport.isPublished) &&
        Objects.equals(this.name, savedReport.name) &&
        Objects.equals(this.note, savedReport.note) &&
        Objects.equals(this.projects, savedReport.projects) &&
        Objects.equals(this.published, savedReport.published) &&
        Objects.equals(this.reportDefinitionId, savedReport.reportDefinitionId) &&
        Objects.equals(this.reportProjectsCount, savedReport.reportProjectsCount) &&
        Objects.equals(this.status, savedReport.status) &&
        Objects.equals(this.statusDefaultText, savedReport.statusDefaultText) &&
        Objects.equals(this.type, savedReport.type) &&
        Objects.equals(this.typeDefaultText, savedReport.typeDefaultText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(embed, authEntity, format, formatDefaultText, generationDate, id, inputReportParameters, isPublished, name, note, projects, published, reportDefinitionId, reportProjectsCount, status, statusDefaultText, type, typeDefaultText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SavedReport {\n");
    
    sb.append("    embed: ").append(toIndentedString(embed)).append("\n");
    sb.append("    authEntity: ").append(toIndentedString(authEntity)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    formatDefaultText: ").append(toIndentedString(formatDefaultText)).append("\n");
    sb.append("    generationDate: ").append(toIndentedString(generationDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inputReportParameters: ").append(toIndentedString(inputReportParameters)).append("\n");
    sb.append("    isPublished: ").append(toIndentedString(isPublished)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    reportDefinitionId: ").append(toIndentedString(reportDefinitionId)).append("\n");
    sb.append("    reportProjectsCount: ").append(toIndentedString(reportProjectsCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDefaultText: ").append(toIndentedString(statusDefaultText)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeDefaultText: ").append(toIndentedString(typeDefaultText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

