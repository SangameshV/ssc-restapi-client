/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.Role;
import com.fortify.ssc.restclient.model.UserPhoto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * An LDAP entity like user, group or organization
 */
@ApiModel(description = "An LDAP entity like user, group or organization")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class LDAPEntity {
  @SerializedName("distinguishedName")
  private String distinguishedName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("lastName")
  private String lastName = null;

  /**
   * Type of LDAP entity.
   */
  @JsonAdapter(LdapTypeEnum.Adapter.class)
  public enum LdapTypeEnum {
    NONE("NONE"),
    
    GROUP("GROUP"),
    
    USER("USER"),
    
    ORG_UNIT("ORG_UNIT");

    private String value;

    LdapTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LdapTypeEnum fromValue(String text) {
      for (LdapTypeEnum b : LdapTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LdapTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LdapTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LdapTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LdapTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("ldapType")
  private LdapTypeEnum ldapType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("roles")
  private List<Role> roles = new ArrayList<Role>();

  @SerializedName("userPhoto")
  private UserPhoto userPhoto = null;

  public LDAPEntity distinguishedName(String distinguishedName) {
    this.distinguishedName = distinguishedName;
    return this;
  }

   /**
   * Distinguished name of LDAP entity
   * @return distinguishedName
  **/
  @ApiModelProperty(required = true, value = "Distinguished name of LDAP entity")
  public String getDistinguishedName() {
    return distinguishedName;
  }

  public void setDistinguishedName(String distinguishedName) {
    this.distinguishedName = distinguishedName;
  }

  public LDAPEntity email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email of LDAP entity
   * @return email
  **/
  @ApiModelProperty(required = true, value = "Email of LDAP entity")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public LDAPEntity firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of LDAP entity
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "First name of LDAP entity")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

   /**
   * LDAP entity identifier
   * @return id
  **/
  @ApiModelProperty(value = "LDAP entity identifier")
  public Long getId() {
    return id;
  }

  public LDAPEntity lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of LDAP entity
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "Last name of LDAP entity")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public LDAPEntity ldapType(LdapTypeEnum ldapType) {
    this.ldapType = ldapType;
    return this;
  }

   /**
   * Type of LDAP entity.
   * @return ldapType
  **/
  @ApiModelProperty(required = true, value = "Type of LDAP entity.")
  public LdapTypeEnum getLdapType() {
    return ldapType;
  }

  public void setLdapType(LdapTypeEnum ldapType) {
    this.ldapType = ldapType;
  }

  public LDAPEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * LDAP entity name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "LDAP entity name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LDAPEntity roles(List<Role> roles) {
    this.roles = roles;
    return this;
  }

  public LDAPEntity addRolesItem(Role rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * List of roles pertaining to this LDAP entity
   * @return roles
  **/
  @ApiModelProperty(required = true, value = "List of roles pertaining to this LDAP entity")
  public List<Role> getRoles() {
    return roles;
  }

  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  public LDAPEntity userPhoto(UserPhoto userPhoto) {
    this.userPhoto = userPhoto;
    return this;
  }

   /**
   * Photo object if LDAP entity is user
   * @return userPhoto
  **/
  @ApiModelProperty(value = "Photo object if LDAP entity is user")
  public UserPhoto getUserPhoto() {
    return userPhoto;
  }

  public void setUserPhoto(UserPhoto userPhoto) {
    this.userPhoto = userPhoto;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LDAPEntity ldAPEntity = (LDAPEntity) o;
    return Objects.equals(this.distinguishedName, ldAPEntity.distinguishedName) &&
        Objects.equals(this.email, ldAPEntity.email) &&
        Objects.equals(this.firstName, ldAPEntity.firstName) &&
        Objects.equals(this.id, ldAPEntity.id) &&
        Objects.equals(this.lastName, ldAPEntity.lastName) &&
        Objects.equals(this.ldapType, ldAPEntity.ldapType) &&
        Objects.equals(this.name, ldAPEntity.name) &&
        Objects.equals(this.roles, ldAPEntity.roles) &&
        Objects.equals(this.userPhoto, ldAPEntity.userPhoto);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distinguishedName, email, firstName, id, lastName, ldapType, name, roles, userPhoto);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LDAPEntity {\n");
    
    sb.append("    distinguishedName: ").append(toIndentedString(distinguishedName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    ldapType: ").append(toIndentedString(ldapType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    userPhoto: ").append(toIndentedString(userPhoto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

