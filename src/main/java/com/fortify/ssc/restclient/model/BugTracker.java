/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.BugTrackerConfiguration;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Bug tracker DTO object
 */
@ApiModel(description = "Bug tracker DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class BugTracker {
  @SerializedName("authenticationRequired")
  private Boolean authenticationRequired = null;

  @SerializedName("bugTrackerConfigs")
  private List<BugTrackerConfiguration> bugTrackerConfigs = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("longDisplayName")
  private String longDisplayName = null;

  @SerializedName("pluginClassName")
  private String pluginClassName = null;

  @SerializedName("pluginId")
  private String pluginId = null;

  @SerializedName("shortDisplayName")
  private String shortDisplayName = null;

  public BugTracker authenticationRequired(Boolean authenticationRequired) {
    this.authenticationRequired = authenticationRequired;
    return this;
  }

   /**
   * Authentication required
   * @return authenticationRequired
  **/
  @ApiModelProperty(example = "false", required = true, value = "Authentication required")
  public Boolean isAuthenticationRequired() {
    return authenticationRequired;
  }

  public void setAuthenticationRequired(Boolean authenticationRequired) {
    this.authenticationRequired = authenticationRequired;
  }

  public BugTracker bugTrackerConfigs(List<BugTrackerConfiguration> bugTrackerConfigs) {
    this.bugTrackerConfigs = bugTrackerConfigs;
    return this;
  }

  public BugTracker addBugTrackerConfigsItem(BugTrackerConfiguration bugTrackerConfigsItem) {
    if (this.bugTrackerConfigs == null) {
      this.bugTrackerConfigs = new ArrayList<BugTrackerConfiguration>();
    }
    this.bugTrackerConfigs.add(bugTrackerConfigsItem);
    return this;
  }

   /**
   * Bug tracker configuration
   * @return bugTrackerConfigs
  **/
  @ApiModelProperty(value = "Bug tracker configuration")
  public List<BugTrackerConfiguration> getBugTrackerConfigs() {
    return bugTrackerConfigs;
  }

  public void setBugTrackerConfigs(List<BugTrackerConfiguration> bugTrackerConfigs) {
    this.bugTrackerConfigs = bugTrackerConfigs;
  }

   /**
   * Bug tracker identifier
   * @return id
  **/
  @ApiModelProperty(value = "Bug tracker identifier")
  public String getId() {
    return id;
  }

  public BugTracker longDisplayName(String longDisplayName) {
    this.longDisplayName = longDisplayName;
    return this;
  }

   /**
   * Long display name
   * @return longDisplayName
  **/
  @ApiModelProperty(value = "Long display name")
  public String getLongDisplayName() {
    return longDisplayName;
  }

  public void setLongDisplayName(String longDisplayName) {
    this.longDisplayName = longDisplayName;
  }

  public BugTracker pluginClassName(String pluginClassName) {
    this.pluginClassName = pluginClassName;
    return this;
  }

   /**
   * Class name
   * @return pluginClassName
  **/
  @ApiModelProperty(required = true, value = "Class name")
  public String getPluginClassName() {
    return pluginClassName;
  }

  public void setPluginClassName(String pluginClassName) {
    this.pluginClassName = pluginClassName;
  }

  public BugTracker pluginId(String pluginId) {
    this.pluginId = pluginId;
    return this;
  }

   /**
   * Bug tracker plugin identifier
   * @return pluginId
  **/
  @ApiModelProperty(required = true, value = "Bug tracker plugin identifier")
  public String getPluginId() {
    return pluginId;
  }

  public void setPluginId(String pluginId) {
    this.pluginId = pluginId;
  }

  public BugTracker shortDisplayName(String shortDisplayName) {
    this.shortDisplayName = shortDisplayName;
    return this;
  }

   /**
   * Short display name
   * @return shortDisplayName
  **/
  @ApiModelProperty(required = true, value = "Short display name")
  public String getShortDisplayName() {
    return shortDisplayName;
  }

  public void setShortDisplayName(String shortDisplayName) {
    this.shortDisplayName = shortDisplayName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BugTracker bugTracker = (BugTracker) o;
    return Objects.equals(this.authenticationRequired, bugTracker.authenticationRequired) &&
        Objects.equals(this.bugTrackerConfigs, bugTracker.bugTrackerConfigs) &&
        Objects.equals(this.id, bugTracker.id) &&
        Objects.equals(this.longDisplayName, bugTracker.longDisplayName) &&
        Objects.equals(this.pluginClassName, bugTracker.pluginClassName) &&
        Objects.equals(this.pluginId, bugTracker.pluginId) &&
        Objects.equals(this.shortDisplayName, bugTracker.shortDisplayName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticationRequired, bugTrackerConfigs, id, longDisplayName, pluginClassName, pluginId, shortDisplayName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BugTracker {\n");
    
    sb.append("    authenticationRequired: ").append(toIndentedString(authenticationRequired)).append("\n");
    sb.append("    bugTrackerConfigs: ").append(toIndentedString(bugTrackerConfigs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    longDisplayName: ").append(toIndentedString(longDisplayName)).append("\n");
    sb.append("    pluginClassName: ").append(toIndentedString(pluginClassName)).append("\n");
    sb.append("    pluginId: ").append(toIndentedString(pluginId)).append("\n");
    sb.append("    shortDisplayName: ").append(toIndentedString(shortDisplayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

