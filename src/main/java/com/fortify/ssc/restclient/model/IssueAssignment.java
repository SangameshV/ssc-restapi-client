/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * counts of issues assigned to user
 */
@ApiModel(description = "counts of issues assigned to user")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class IssueAssignment {
  @SerializedName("issueCountAllProjectVer")
  private Integer issueCountAllProjectVer = null;

  @SerializedName("issueCountCertainProjectVer")
  private Integer issueCountCertainProjectVer = null;

  @SerializedName("projectVersionId")
  private Long projectVersionId = null;

  @SerializedName("userName")
  private String userName = null;

   /**
   * total number of issues assigned to user across all project versions
   * @return issueCountAllProjectVer
  **/
  @ApiModelProperty(required = true, value = "total number of issues assigned to user across all project versions")
  public Integer getIssueCountAllProjectVer() {
    return issueCountAllProjectVer;
  }

   /**
   * number of issues assigned to user in current project version
   * @return issueCountCertainProjectVer
  **/
  @ApiModelProperty(required = true, value = "number of issues assigned to user in current project version")
  public Integer getIssueCountCertainProjectVer() {
    return issueCountCertainProjectVer;
  }

   /**
   * Get projectVersionId
   * @return projectVersionId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getProjectVersionId() {
    return projectVersionId;
  }

   /**
   * Get userName
   * @return userName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserName() {
    return userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueAssignment issueAssignment = (IssueAssignment) o;
    return Objects.equals(this.issueCountAllProjectVer, issueAssignment.issueCountAllProjectVer) &&
        Objects.equals(this.issueCountCertainProjectVer, issueAssignment.issueCountCertainProjectVer) &&
        Objects.equals(this.projectVersionId, issueAssignment.projectVersionId) &&
        Objects.equals(this.userName, issueAssignment.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issueCountAllProjectVer, issueCountCertainProjectVer, projectVersionId, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueAssignment {\n");
    
    sb.append("    issueCountAllProjectVer: ").append(toIndentedString(issueCountAllProjectVer)).append("\n");
    sb.append("    issueCountCertainProjectVer: ").append(toIndentedString(issueCountCertainProjectVer)).append("\n");
    sb.append("    projectVersionId: ").append(toIndentedString(projectVersionId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

