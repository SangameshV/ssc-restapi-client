/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Options that can be used for customizing issue search result.
 */
@ApiModel(description = "Options that can be used for customizing issue search result.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class IssueSearchOption {
  /**
   * Option type.
   */
  @JsonAdapter(OptionTypeEnum.Adapter.class)
  public enum OptionTypeEnum {
    INCLUDE_COMMENTS_IN_HISTORY("INCLUDE_COMMENTS_IN_HISTORY"),
    
    HIDDEN("HIDDEN"),
    
    REMOVED("REMOVED"),
    
    SUPPRESSED("SUPPRESSED"),
    
    SHORT_FILE_NAMES("SHORT_FILE_NAMES");

    private String value;

    OptionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OptionTypeEnum fromValue(String text) {
      for (OptionTypeEnum b : OptionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OptionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OptionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OptionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OptionTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("optionType")
  private OptionTypeEnum optionType = null;

  @SerializedName("optionValue")
  private Boolean optionValue = null;

   /**
   * Option type.
   * @return optionType
  **/
  @ApiModelProperty(value = "Option type.")
  public OptionTypeEnum getOptionType() {
    return optionType;
  }

   /**
   * If this option is enabled.
   * @return optionValue
  **/
  @ApiModelProperty(example = "false", required = true, value = "If this option is enabled.")
  public Boolean isOptionValue() {
    return optionValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueSearchOption issueSearchOption = (IssueSearchOption) o;
    return Objects.equals(this.optionType, issueSearchOption.optionType) &&
        Objects.equals(this.optionValue, issueSearchOption.optionValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optionType, optionValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueSearchOption {\n");
    
    sb.append("    optionType: ").append(toIndentedString(optionType)).append("\n");
    sb.append("    optionValue: ").append(toIndentedString(optionValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

