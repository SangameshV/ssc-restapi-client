/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Project version issue DTO object
 */
@ApiModel(description = "Project version issue DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class ProjectVersionIssue {
  @SerializedName("analyzer")
  private String analyzer = null;

  @SerializedName("audited")
  private Boolean audited = null;

  @SerializedName("bugURL")
  private String bugURL = null;

  @SerializedName("confidence")
  private Float confidence = null;

  @SerializedName("displayEngineType")
  private String displayEngineType = null;

  /**
   * Engine category
   */
  @JsonAdapter(EngineCategoryEnum.Adapter.class)
  public enum EngineCategoryEnum {
    STATIC("STATIC"),
    
    DYNAMIC("DYNAMIC");

    private String value;

    EngineCategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EngineCategoryEnum fromValue(String text) {
      for (EngineCategoryEnum b : EngineCategoryEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EngineCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EngineCategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EngineCategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EngineCategoryEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("engineCategory")
  private EngineCategoryEnum engineCategory = null;

  @SerializedName("engineType")
  private String engineType = null;

  @SerializedName("folderGuid")
  private String folderGuid = null;

  @SerializedName("folderId")
  private Long folderId = null;

  @SerializedName("foundDate")
  private OffsetDateTime foundDate = null;

  @SerializedName("friority")
  private String friority = null;

  @SerializedName("fullFileName")
  private String fullFileName = null;

  @SerializedName("hasAttachments")
  private Boolean hasAttachments = null;

  @SerializedName("hasCorrelatedIssues")
  private Boolean hasCorrelatedIssues = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("impact")
  private Float impact = null;

  @SerializedName("issueInstanceId")
  private String issueInstanceId = null;

  @SerializedName("issueName")
  private String issueName = null;

  @SerializedName("issueStatus")
  private String issueStatus = null;

  @SerializedName("kingdom")
  private String kingdom = null;

  @SerializedName("lastScanId")
  private Long lastScanId = null;

  @SerializedName("likelihood")
  private Float likelihood = null;

  @SerializedName("lineNumber")
  private Integer lineNumber = null;

  @SerializedName("primaryLocation")
  private String primaryLocation = null;

  @SerializedName("primaryRuleGuid")
  private String primaryRuleGuid = null;

  @SerializedName("primaryTag")
  private String primaryTag = null;

  @SerializedName("primaryTagValueAutoApplied")
  private Boolean primaryTagValueAutoApplied = null;

  @SerializedName("projectName")
  private String projectName = null;

  @SerializedName("projectVersionId")
  private Long projectVersionId = null;

  @SerializedName("projectVersionName")
  private String projectVersionName = null;

  @SerializedName("removed")
  private Boolean removed = null;

  @SerializedName("removedDate")
  private OffsetDateTime removedDate = null;

  @SerializedName("reviewed")
  private String reviewed = null;

  @SerializedName("revision")
  private Integer revision = null;

  @SerializedName("scanStatus")
  private String scanStatus = null;

  @SerializedName("severity")
  private Float severity = null;

  @SerializedName("suppressed")
  private Boolean suppressed = null;

  public ProjectVersionIssue analyzer(String analyzer) {
    this.analyzer = analyzer;
    return this;
  }

   /**
   * Analyzer
   * @return analyzer
  **/
  @ApiModelProperty(required = true, value = "Analyzer")
  public String getAnalyzer() {
    return analyzer;
  }

  public void setAnalyzer(String analyzer) {
    this.analyzer = analyzer;
  }

  public ProjectVersionIssue audited(Boolean audited) {
    this.audited = audited;
    return this;
  }

   /**
   * Flag is set for issues that has been audited and primary tag value was set for this issue.
   * @return audited
  **/
  @ApiModelProperty(example = "false", value = "Flag is set for issues that has been audited and primary tag value was set for this issue.")
  public Boolean isAudited() {
    return audited;
  }

  public void setAudited(Boolean audited) {
    this.audited = audited;
  }

  public ProjectVersionIssue bugURL(String bugURL) {
    this.bugURL = bugURL;
    return this;
  }

   /**
   * Bug url
   * @return bugURL
  **/
  @ApiModelProperty(required = true, value = "Bug url")
  public String getBugURL() {
    return bugURL;
  }

  public void setBugURL(String bugURL) {
    this.bugURL = bugURL;
  }

  public ProjectVersionIssue confidence(Float confidence) {
    this.confidence = confidence;
    return this;
  }

   /**
   * Issue confidence
   * @return confidence
  **/
  @ApiModelProperty(required = true, value = "Issue confidence")
  public Float getConfidence() {
    return confidence;
  }

  public void setConfidence(Float confidence) {
    this.confidence = confidence;
  }

  public ProjectVersionIssue displayEngineType(String displayEngineType) {
    this.displayEngineType = displayEngineType;
    return this;
  }

   /**
   * Display name for engine type
   * @return displayEngineType
  **/
  @ApiModelProperty(required = true, value = "Display name for engine type")
  public String getDisplayEngineType() {
    return displayEngineType;
  }

  public void setDisplayEngineType(String displayEngineType) {
    this.displayEngineType = displayEngineType;
  }

  public ProjectVersionIssue engineCategory(EngineCategoryEnum engineCategory) {
    this.engineCategory = engineCategory;
    return this;
  }

   /**
   * Engine category
   * @return engineCategory
  **/
  @ApiModelProperty(required = true, value = "Engine category")
  public EngineCategoryEnum getEngineCategory() {
    return engineCategory;
  }

  public void setEngineCategory(EngineCategoryEnum engineCategory) {
    this.engineCategory = engineCategory;
  }

  public ProjectVersionIssue engineType(String engineType) {
    this.engineType = engineType;
    return this;
  }

   /**
   * Engine type
   * @return engineType
  **/
  @ApiModelProperty(required = true, value = "Engine type")
  public String getEngineType() {
    return engineType;
  }

  public void setEngineType(String engineType) {
    this.engineType = engineType;
  }

  public ProjectVersionIssue folderGuid(String folderGuid) {
    this.folderGuid = folderGuid;
    return this;
  }

   /**
   * Issue folder globally unique identifier
   * @return folderGuid
  **/
  @ApiModelProperty(required = true, value = "Issue folder globally unique identifier")
  public String getFolderGuid() {
    return folderGuid;
  }

  public void setFolderGuid(String folderGuid) {
    this.folderGuid = folderGuid;
  }

  public ProjectVersionIssue folderId(Long folderId) {
    this.folderId = folderId;
    return this;
  }

   /**
   * Deprecated - Issue folder identifier.  This may be incorrect or invalid.  Please use folderGuid instead.
   * @return folderId
  **/
  @ApiModelProperty(required = true, value = "Deprecated - Issue folder identifier.  This may be incorrect or invalid.  Please use folderGuid instead.")
  public Long getFolderId() {
    return folderId;
  }

  public void setFolderId(Long folderId) {
    this.folderId = folderId;
  }

  public ProjectVersionIssue foundDate(OffsetDateTime foundDate) {
    this.foundDate = foundDate;
    return this;
  }

   /**
   * Date when issue found
   * @return foundDate
  **/
  @ApiModelProperty(required = true, value = "Date when issue found")
  public OffsetDateTime getFoundDate() {
    return foundDate;
  }

  public void setFoundDate(OffsetDateTime foundDate) {
    this.foundDate = foundDate;
  }

  public ProjectVersionIssue friority(String friority) {
    this.friority = friority;
    return this;
  }

   /**
   * Friority
   * @return friority
  **/
  @ApiModelProperty(required = true, value = "Friority")
  public String getFriority() {
    return friority;
  }

  public void setFriority(String friority) {
    this.friority = friority;
  }

  public ProjectVersionIssue fullFileName(String fullFileName) {
    this.fullFileName = fullFileName;
    return this;
  }

   /**
   * Full file name where issue found
   * @return fullFileName
  **/
  @ApiModelProperty(required = true, value = "Full file name where issue found")
  public String getFullFileName() {
    return fullFileName;
  }

  public void setFullFileName(String fullFileName) {
    this.fullFileName = fullFileName;
  }

  public ProjectVersionIssue hasAttachments(Boolean hasAttachments) {
    this.hasAttachments = hasAttachments;
    return this;
  }

   /**
   * Set to true if issue has attachments
   * @return hasAttachments
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if issue has attachments")
  public Boolean isHasAttachments() {
    return hasAttachments;
  }

  public void setHasAttachments(Boolean hasAttachments) {
    this.hasAttachments = hasAttachments;
  }

  public ProjectVersionIssue hasCorrelatedIssues(Boolean hasCorrelatedIssues) {
    this.hasCorrelatedIssues = hasCorrelatedIssues;
    return this;
  }

   /**
   * Set to true if issue has other correlated issues
   * @return hasCorrelatedIssues
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if issue has other correlated issues")
  public Boolean isHasCorrelatedIssues() {
    return hasCorrelatedIssues;
  }

  public void setHasCorrelatedIssues(Boolean hasCorrelatedIssues) {
    this.hasCorrelatedIssues = hasCorrelatedIssues;
  }

  public ProjectVersionIssue hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Set to true if issue is hidden
   * @return hidden
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if issue is hidden")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

   /**
   * Project version issue identifier
   * @return id
  **/
  @ApiModelProperty(value = "Project version issue identifier")
  public Long getId() {
    return id;
  }

  public ProjectVersionIssue impact(Float impact) {
    this.impact = impact;
    return this;
  }

   /**
   * Issue impact
   * @return impact
  **/
  @ApiModelProperty(required = true, value = "Issue impact")
  public Float getImpact() {
    return impact;
  }

  public void setImpact(Float impact) {
    this.impact = impact;
  }

  public ProjectVersionIssue issueInstanceId(String issueInstanceId) {
    this.issueInstanceId = issueInstanceId;
    return this;
  }

   /**
   * Issue instance identifier
   * @return issueInstanceId
  **/
  @ApiModelProperty(required = true, value = "Issue instance identifier")
  public String getIssueInstanceId() {
    return issueInstanceId;
  }

  public void setIssueInstanceId(String issueInstanceId) {
    this.issueInstanceId = issueInstanceId;
  }

  public ProjectVersionIssue issueName(String issueName) {
    this.issueName = issueName;
    return this;
  }

   /**
   * Issue name
   * @return issueName
  **/
  @ApiModelProperty(required = true, value = "Issue name")
  public String getIssueName() {
    return issueName;
  }

  public void setIssueName(String issueName) {
    this.issueName = issueName;
  }

  public ProjectVersionIssue issueStatus(String issueStatus) {
    this.issueStatus = issueStatus;
    return this;
  }

   /**
   * Flag represents issue review status and can have 3 types of values: Unreviewed, Under Review, Reviewed.
   * @return issueStatus
  **/
  @ApiModelProperty(value = "Flag represents issue review status and can have 3 types of values: Unreviewed, Under Review, Reviewed.")
  public String getIssueStatus() {
    return issueStatus;
  }

  public void setIssueStatus(String issueStatus) {
    this.issueStatus = issueStatus;
  }

  public ProjectVersionIssue kingdom(String kingdom) {
    this.kingdom = kingdom;
    return this;
  }

   /**
   * Kingdom
   * @return kingdom
  **/
  @ApiModelProperty(required = true, value = "Kingdom")
  public String getKingdom() {
    return kingdom;
  }

  public void setKingdom(String kingdom) {
    this.kingdom = kingdom;
  }

  public ProjectVersionIssue lastScanId(Long lastScanId) {
    this.lastScanId = lastScanId;
    return this;
  }

   /**
   * ID of the latest scan that found the issue
   * @return lastScanId
  **/
  @ApiModelProperty(value = "ID of the latest scan that found the issue")
  public Long getLastScanId() {
    return lastScanId;
  }

  public void setLastScanId(Long lastScanId) {
    this.lastScanId = lastScanId;
  }

  public ProjectVersionIssue likelihood(Float likelihood) {
    this.likelihood = likelihood;
    return this;
  }

   /**
   * Likelihood of issue
   * @return likelihood
  **/
  @ApiModelProperty(required = true, value = "Likelihood of issue")
  public Float getLikelihood() {
    return likelihood;
  }

  public void setLikelihood(Float likelihood) {
    this.likelihood = likelihood;
  }

  public ProjectVersionIssue lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Line number where issue found
   * @return lineNumber
  **/
  @ApiModelProperty(required = true, value = "Line number where issue found")
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }

  public ProjectVersionIssue primaryLocation(String primaryLocation) {
    this.primaryLocation = primaryLocation;
    return this;
  }

   /**
   * Issue primary location
   * @return primaryLocation
  **/
  @ApiModelProperty(required = true, value = "Issue primary location")
  public String getPrimaryLocation() {
    return primaryLocation;
  }

  public void setPrimaryLocation(String primaryLocation) {
    this.primaryLocation = primaryLocation;
  }

  public ProjectVersionIssue primaryRuleGuid(String primaryRuleGuid) {
    this.primaryRuleGuid = primaryRuleGuid;
    return this;
  }

   /**
   * Primary rule global unique identifier
   * @return primaryRuleGuid
  **/
  @ApiModelProperty(required = true, value = "Primary rule global unique identifier")
  public String getPrimaryRuleGuid() {
    return primaryRuleGuid;
  }

  public void setPrimaryRuleGuid(String primaryRuleGuid) {
    this.primaryRuleGuid = primaryRuleGuid;
  }

  public ProjectVersionIssue primaryTag(String primaryTag) {
    this.primaryTag = primaryTag;
    return this;
  }

   /**
   * Issue primary tag
   * @return primaryTag
  **/
  @ApiModelProperty(required = true, value = "Issue primary tag")
  public String getPrimaryTag() {
    return primaryTag;
  }

  public void setPrimaryTag(String primaryTag) {
    this.primaryTag = primaryTag;
  }

  public ProjectVersionIssue primaryTagValueAutoApplied(Boolean primaryTagValueAutoApplied) {
    this.primaryTagValueAutoApplied = primaryTagValueAutoApplied;
    return this;
  }

   /**
   * Flag equals true if value of custom tag was applied automatically
   * @return primaryTagValueAutoApplied
  **/
  @ApiModelProperty(example = "false", value = "Flag equals true if value of custom tag was applied automatically")
  public Boolean isPrimaryTagValueAutoApplied() {
    return primaryTagValueAutoApplied;
  }

  public void setPrimaryTagValueAutoApplied(Boolean primaryTagValueAutoApplied) {
    this.primaryTagValueAutoApplied = primaryTagValueAutoApplied;
  }

  public ProjectVersionIssue projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Project name
   * @return projectName
  **/
  @ApiModelProperty(required = true, value = "Project name")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ProjectVersionIssue projectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
    return this;
  }

   /**
   * Project version identifier
   * @return projectVersionId
  **/
  @ApiModelProperty(required = true, value = "Project version identifier")
  public Long getProjectVersionId() {
    return projectVersionId;
  }

  public void setProjectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
  }

  public ProjectVersionIssue projectVersionName(String projectVersionName) {
    this.projectVersionName = projectVersionName;
    return this;
  }

   /**
   * Project version name
   * @return projectVersionName
  **/
  @ApiModelProperty(required = true, value = "Project version name")
  public String getProjectVersionName() {
    return projectVersionName;
  }

  public void setProjectVersionName(String projectVersionName) {
    this.projectVersionName = projectVersionName;
  }

  public ProjectVersionIssue removed(Boolean removed) {
    this.removed = removed;
    return this;
  }

   /**
   * Set to true if issue is suppressed
   * @return removed
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if issue is suppressed")
  public Boolean isRemoved() {
    return removed;
  }

  public void setRemoved(Boolean removed) {
    this.removed = removed;
  }

  public ProjectVersionIssue removedDate(OffsetDateTime removedDate) {
    this.removedDate = removedDate;
    return this;
  }

   /**
   * Date when issue removed
   * @return removedDate
  **/
  @ApiModelProperty(required = true, value = "Date when issue removed")
  public OffsetDateTime getRemovedDate() {
    return removedDate;
  }

  public void setRemovedDate(OffsetDateTime removedDate) {
    this.removedDate = removedDate;
  }

  public ProjectVersionIssue reviewed(String reviewed) {
    this.reviewed = reviewed;
    return this;
  }

   /**
   * Issue reviewer
   * @return reviewed
  **/
  @ApiModelProperty(required = true, value = "Issue reviewer")
  public String getReviewed() {
    return reviewed;
  }

  public void setReviewed(String reviewed) {
    this.reviewed = reviewed;
  }

  public ProjectVersionIssue revision(Integer revision) {
    this.revision = revision;
    return this;
  }

   /**
   * Project version revision
   * @return revision
  **/
  @ApiModelProperty(required = true, value = "Project version revision")
  public Integer getRevision() {
    return revision;
  }

  public void setRevision(Integer revision) {
    this.revision = revision;
  }

  public ProjectVersionIssue scanStatus(String scanStatus) {
    this.scanStatus = scanStatus;
    return this;
  }

   /**
   * Scan status
   * @return scanStatus
  **/
  @ApiModelProperty(required = true, value = "Scan status")
  public String getScanStatus() {
    return scanStatus;
  }

  public void setScanStatus(String scanStatus) {
    this.scanStatus = scanStatus;
  }

  public ProjectVersionIssue severity(Float severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Issue severity
   * @return severity
  **/
  @ApiModelProperty(required = true, value = "Issue severity")
  public Float getSeverity() {
    return severity;
  }

  public void setSeverity(Float severity) {
    this.severity = severity;
  }

  public ProjectVersionIssue suppressed(Boolean suppressed) {
    this.suppressed = suppressed;
    return this;
  }

   /**
   * Set to true if issue is suppressed
   * @return suppressed
  **/
  @ApiModelProperty(example = "false", required = true, value = "Set to true if issue is suppressed")
  public Boolean isSuppressed() {
    return suppressed;
  }

  public void setSuppressed(Boolean suppressed) {
    this.suppressed = suppressed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectVersionIssue projectVersionIssue = (ProjectVersionIssue) o;
    return Objects.equals(this.analyzer, projectVersionIssue.analyzer) &&
        Objects.equals(this.audited, projectVersionIssue.audited) &&
        Objects.equals(this.bugURL, projectVersionIssue.bugURL) &&
        Objects.equals(this.confidence, projectVersionIssue.confidence) &&
        Objects.equals(this.displayEngineType, projectVersionIssue.displayEngineType) &&
        Objects.equals(this.engineCategory, projectVersionIssue.engineCategory) &&
        Objects.equals(this.engineType, projectVersionIssue.engineType) &&
        Objects.equals(this.folderGuid, projectVersionIssue.folderGuid) &&
        Objects.equals(this.folderId, projectVersionIssue.folderId) &&
        Objects.equals(this.foundDate, projectVersionIssue.foundDate) &&
        Objects.equals(this.friority, projectVersionIssue.friority) &&
        Objects.equals(this.fullFileName, projectVersionIssue.fullFileName) &&
        Objects.equals(this.hasAttachments, projectVersionIssue.hasAttachments) &&
        Objects.equals(this.hasCorrelatedIssues, projectVersionIssue.hasCorrelatedIssues) &&
        Objects.equals(this.hidden, projectVersionIssue.hidden) &&
        Objects.equals(this.id, projectVersionIssue.id) &&
        Objects.equals(this.impact, projectVersionIssue.impact) &&
        Objects.equals(this.issueInstanceId, projectVersionIssue.issueInstanceId) &&
        Objects.equals(this.issueName, projectVersionIssue.issueName) &&
        Objects.equals(this.issueStatus, projectVersionIssue.issueStatus) &&
        Objects.equals(this.kingdom, projectVersionIssue.kingdom) &&
        Objects.equals(this.lastScanId, projectVersionIssue.lastScanId) &&
        Objects.equals(this.likelihood, projectVersionIssue.likelihood) &&
        Objects.equals(this.lineNumber, projectVersionIssue.lineNumber) &&
        Objects.equals(this.primaryLocation, projectVersionIssue.primaryLocation) &&
        Objects.equals(this.primaryRuleGuid, projectVersionIssue.primaryRuleGuid) &&
        Objects.equals(this.primaryTag, projectVersionIssue.primaryTag) &&
        Objects.equals(this.primaryTagValueAutoApplied, projectVersionIssue.primaryTagValueAutoApplied) &&
        Objects.equals(this.projectName, projectVersionIssue.projectName) &&
        Objects.equals(this.projectVersionId, projectVersionIssue.projectVersionId) &&
        Objects.equals(this.projectVersionName, projectVersionIssue.projectVersionName) &&
        Objects.equals(this.removed, projectVersionIssue.removed) &&
        Objects.equals(this.removedDate, projectVersionIssue.removedDate) &&
        Objects.equals(this.reviewed, projectVersionIssue.reviewed) &&
        Objects.equals(this.revision, projectVersionIssue.revision) &&
        Objects.equals(this.scanStatus, projectVersionIssue.scanStatus) &&
        Objects.equals(this.severity, projectVersionIssue.severity) &&
        Objects.equals(this.suppressed, projectVersionIssue.suppressed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyzer, audited, bugURL, confidence, displayEngineType, engineCategory, engineType, folderGuid, folderId, foundDate, friority, fullFileName, hasAttachments, hasCorrelatedIssues, hidden, id, impact, issueInstanceId, issueName, issueStatus, kingdom, lastScanId, likelihood, lineNumber, primaryLocation, primaryRuleGuid, primaryTag, primaryTagValueAutoApplied, projectName, projectVersionId, projectVersionName, removed, removedDate, reviewed, revision, scanStatus, severity, suppressed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectVersionIssue {\n");
    
    sb.append("    analyzer: ").append(toIndentedString(analyzer)).append("\n");
    sb.append("    audited: ").append(toIndentedString(audited)).append("\n");
    sb.append("    bugURL: ").append(toIndentedString(bugURL)).append("\n");
    sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
    sb.append("    displayEngineType: ").append(toIndentedString(displayEngineType)).append("\n");
    sb.append("    engineCategory: ").append(toIndentedString(engineCategory)).append("\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    folderGuid: ").append(toIndentedString(folderGuid)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    foundDate: ").append(toIndentedString(foundDate)).append("\n");
    sb.append("    friority: ").append(toIndentedString(friority)).append("\n");
    sb.append("    fullFileName: ").append(toIndentedString(fullFileName)).append("\n");
    sb.append("    hasAttachments: ").append(toIndentedString(hasAttachments)).append("\n");
    sb.append("    hasCorrelatedIssues: ").append(toIndentedString(hasCorrelatedIssues)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    issueInstanceId: ").append(toIndentedString(issueInstanceId)).append("\n");
    sb.append("    issueName: ").append(toIndentedString(issueName)).append("\n");
    sb.append("    issueStatus: ").append(toIndentedString(issueStatus)).append("\n");
    sb.append("    kingdom: ").append(toIndentedString(kingdom)).append("\n");
    sb.append("    lastScanId: ").append(toIndentedString(lastScanId)).append("\n");
    sb.append("    likelihood: ").append(toIndentedString(likelihood)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    primaryLocation: ").append(toIndentedString(primaryLocation)).append("\n");
    sb.append("    primaryRuleGuid: ").append(toIndentedString(primaryRuleGuid)).append("\n");
    sb.append("    primaryTag: ").append(toIndentedString(primaryTag)).append("\n");
    sb.append("    primaryTagValueAutoApplied: ").append(toIndentedString(primaryTagValueAutoApplied)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    projectVersionId: ").append(toIndentedString(projectVersionId)).append("\n");
    sb.append("    projectVersionName: ").append(toIndentedString(projectVersionName)).append("\n");
    sb.append("    removed: ").append(toIndentedString(removed)).append("\n");
    sb.append("    removedDate: ").append(toIndentedString(removedDate)).append("\n");
    sb.append("    reviewed: ").append(toIndentedString(reviewed)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    scanStatus: ").append(toIndentedString(scanStatus)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    suppressed: ").append(toIndentedString(suppressed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

