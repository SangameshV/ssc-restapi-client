/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.BugParam;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * BugFilingRequirements
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class BugFilingRequirements {
  @SerializedName("bugParams")
  private List<BugParam> bugParams = null;

  @SerializedName("bugTrackerLongDisplayName")
  private String bugTrackerLongDisplayName = null;

  @SerializedName("bugTrackerShortDisplayName")
  private String bugTrackerShortDisplayName = null;

  @SerializedName("requiresAuthentication")
  private Boolean requiresAuthentication = null;

  public BugFilingRequirements bugParams(List<BugParam> bugParams) {
    this.bugParams = bugParams;
    return this;
  }

  public BugFilingRequirements addBugParamsItem(BugParam bugParamsItem) {
    if (this.bugParams == null) {
      this.bugParams = new ArrayList<BugParam>();
    }
    this.bugParams.add(bugParamsItem);
    return this;
  }

   /**
   * Get bugParams
   * @return bugParams
  **/
  @ApiModelProperty(value = "")
  public List<BugParam> getBugParams() {
    return bugParams;
  }

  public void setBugParams(List<BugParam> bugParams) {
    this.bugParams = bugParams;
  }

  public BugFilingRequirements bugTrackerLongDisplayName(String bugTrackerLongDisplayName) {
    this.bugTrackerLongDisplayName = bugTrackerLongDisplayName;
    return this;
  }

   /**
   * Get bugTrackerLongDisplayName
   * @return bugTrackerLongDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getBugTrackerLongDisplayName() {
    return bugTrackerLongDisplayName;
  }

  public void setBugTrackerLongDisplayName(String bugTrackerLongDisplayName) {
    this.bugTrackerLongDisplayName = bugTrackerLongDisplayName;
  }

  public BugFilingRequirements bugTrackerShortDisplayName(String bugTrackerShortDisplayName) {
    this.bugTrackerShortDisplayName = bugTrackerShortDisplayName;
    return this;
  }

   /**
   * Get bugTrackerShortDisplayName
   * @return bugTrackerShortDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getBugTrackerShortDisplayName() {
    return bugTrackerShortDisplayName;
  }

  public void setBugTrackerShortDisplayName(String bugTrackerShortDisplayName) {
    this.bugTrackerShortDisplayName = bugTrackerShortDisplayName;
  }

  public BugFilingRequirements requiresAuthentication(Boolean requiresAuthentication) {
    this.requiresAuthentication = requiresAuthentication;
    return this;
  }

   /**
   * Get requiresAuthentication
   * @return requiresAuthentication
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequiresAuthentication() {
    return requiresAuthentication;
  }

  public void setRequiresAuthentication(Boolean requiresAuthentication) {
    this.requiresAuthentication = requiresAuthentication;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BugFilingRequirements bugFilingRequirements = (BugFilingRequirements) o;
    return Objects.equals(this.bugParams, bugFilingRequirements.bugParams) &&
        Objects.equals(this.bugTrackerLongDisplayName, bugFilingRequirements.bugTrackerLongDisplayName) &&
        Objects.equals(this.bugTrackerShortDisplayName, bugFilingRequirements.bugTrackerShortDisplayName) &&
        Objects.equals(this.requiresAuthentication, bugFilingRequirements.requiresAuthentication);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bugParams, bugTrackerLongDisplayName, bugTrackerShortDisplayName, requiresAuthentication);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BugFilingRequirements {\n");
    
    sb.append("    bugParams: ").append(toIndentedString(bugParams)).append("\n");
    sb.append("    bugTrackerLongDisplayName: ").append(toIndentedString(bugTrackerLongDisplayName)).append("\n");
    sb.append("    bugTrackerShortDisplayName: ").append(toIndentedString(bugTrackerShortDisplayName)).append("\n");
    sb.append("    requiresAuthentication: ").append(toIndentedString(requiresAuthentication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

