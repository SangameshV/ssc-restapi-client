/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * User specific options that can be used for customizing issue search result.
 */
@ApiModel(description = "User specific options that can be used for customizing issue search result.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class UserIssueSearchOptions {
  @SerializedName("includeCommentsInHistory")
  private Boolean includeCommentsInHistory = null;

  @SerializedName("projectVersionId")
  private Long projectVersionId = null;

  @SerializedName("showHidden")
  private Boolean showHidden = null;

  @SerializedName("showRemoved")
  private Boolean showRemoved = null;

  @SerializedName("showShortFileNames")
  private Boolean showShortFileNames = null;

  @SerializedName("showSuppressed")
  private Boolean showSuppressed = null;

  public UserIssueSearchOptions includeCommentsInHistory(Boolean includeCommentsInHistory) {
    this.includeCommentsInHistory = includeCommentsInHistory;
    return this;
  }

   /**
   * If &#39;true&#39;, comments are included in issue audit history. Used only by flex UI.
   * @return includeCommentsInHistory
  **/
  @ApiModelProperty(example = "false", value = "If 'true', comments are included in issue audit history. Used only by flex UI.")
  public Boolean isIncludeCommentsInHistory() {
    return includeCommentsInHistory;
  }

  public void setIncludeCommentsInHistory(Boolean includeCommentsInHistory) {
    this.includeCommentsInHistory = includeCommentsInHistory;
  }

  public UserIssueSearchOptions projectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
    return this;
  }

   /**
   * Application version ID the option values belong to. Value is empty for default options that can be applied to any project version user has access to if project version specific options are not defined.
   * @return projectVersionId
  **/
  @ApiModelProperty(value = "Application version ID the option values belong to. Value is empty for default options that can be applied to any project version user has access to if project version specific options are not defined.")
  public Long getProjectVersionId() {
    return projectVersionId;
  }

  public void setProjectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
  }

  public UserIssueSearchOptions showHidden(Boolean showHidden) {
    this.showHidden = showHidden;
    return this;
  }

   /**
   * If &#39;true&#39;, include hidden issues in search results. If &#39;false&#39;, exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.
   * @return showHidden
  **/
  @ApiModelProperty(example = "false", value = "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.")
  public Boolean isShowHidden() {
    return showHidden;
  }

  public void setShowHidden(Boolean showHidden) {
    this.showHidden = showHidden;
  }

  public UserIssueSearchOptions showRemoved(Boolean showRemoved) {
    this.showRemoved = showRemoved;
    return this;
  }

   /**
   * If &#39;true&#39;, include removed issues in search results. If &#39;false&#39;, exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.
   * @return showRemoved
  **/
  @ApiModelProperty(example = "false", value = "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.")
  public Boolean isShowRemoved() {
    return showRemoved;
  }

  public void setShowRemoved(Boolean showRemoved) {
    this.showRemoved = showRemoved;
  }

  public UserIssueSearchOptions showShortFileNames(Boolean showShortFileNames) {
    this.showShortFileNames = showShortFileNames;
    return this;
  }

   /**
   * If &#39;true&#39;, only short file names will be displayed in issues list.
   * @return showShortFileNames
  **/
  @ApiModelProperty(example = "false", value = "If 'true', only short file names will be displayed in issues list.")
  public Boolean isShowShortFileNames() {
    return showShortFileNames;
  }

  public void setShowShortFileNames(Boolean showShortFileNames) {
    this.showShortFileNames = showShortFileNames;
  }

  public UserIssueSearchOptions showSuppressed(Boolean showSuppressed) {
    this.showSuppressed = showSuppressed;
    return this;
  }

   /**
   * If &#39;true&#39;, include suppressed issues in search results. If &#39;false&#39;, exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.
   * @return showSuppressed
  **/
  @ApiModelProperty(example = "false", value = "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.")
  public Boolean isShowSuppressed() {
    return showSuppressed;
  }

  public void setShowSuppressed(Boolean showSuppressed) {
    this.showSuppressed = showSuppressed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserIssueSearchOptions userIssueSearchOptions = (UserIssueSearchOptions) o;
    return Objects.equals(this.includeCommentsInHistory, userIssueSearchOptions.includeCommentsInHistory) &&
        Objects.equals(this.projectVersionId, userIssueSearchOptions.projectVersionId) &&
        Objects.equals(this.showHidden, userIssueSearchOptions.showHidden) &&
        Objects.equals(this.showRemoved, userIssueSearchOptions.showRemoved) &&
        Objects.equals(this.showShortFileNames, userIssueSearchOptions.showShortFileNames) &&
        Objects.equals(this.showSuppressed, userIssueSearchOptions.showSuppressed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeCommentsInHistory, projectVersionId, showHidden, showRemoved, showShortFileNames, showSuppressed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserIssueSearchOptions {\n");
    
    sb.append("    includeCommentsInHistory: ").append(toIndentedString(includeCommentsInHistory)).append("\n");
    sb.append("    projectVersionId: ").append(toIndentedString(projectVersionId)).append("\n");
    sb.append("    showHidden: ").append(toIndentedString(showHidden)).append("\n");
    sb.append("    showRemoved: ").append(toIndentedString(showRemoved)).append("\n");
    sb.append("    showShortFileNames: ").append(toIndentedString(showShortFileNames)).append("\n");
    sb.append("    showSuppressed: ").append(toIndentedString(showSuppressed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

