/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Metadata of a Software Security Center token
 */
@ApiModel(description = "Metadata of a Software Security Center token")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class TokenDefinition {
  @SerializedName("capabilityDescription")
  private String capabilityDescription = null;

  @SerializedName("maxDaysToLive")
  private Integer maxDaysToLive = null;

  @SerializedName("maxUsages")
  private Integer maxUsages = null;

  @SerializedName("type")
  private String type = null;

   /**
   * Describes what tokens generated from this token specification can be used for. Note that these capabilities are subordinate to the actual roles/permissions granted to the owner of the token
   * @return capabilityDescription
  **/
  @ApiModelProperty(value = "Describes what tokens generated from this token specification can be used for. Note that these capabilities are subordinate to the actual roles/permissions granted to the owner of the token")
  public String getCapabilityDescription() {
    return capabilityDescription;
  }

   /**
   * Maximum allowable lifetime (in days) of token
   * @return maxDaysToLive
  **/
  @ApiModelProperty(value = "Maximum allowable lifetime (in days) of token")
  public Integer getMaxDaysToLive() {
    return maxDaysToLive;
  }

   /**
   * Maximum number of api calls that can be made using this token type. A value of -1 denotes unlimited number of calls.
   * @return maxUsages
  **/
  @ApiModelProperty(value = "Maximum number of api calls that can be made using this token type. A value of -1 denotes unlimited number of calls.")
  public Integer getMaxUsages() {
    return maxUsages;
  }

   /**
   * Token type
   * @return type
  **/
  @ApiModelProperty(value = "Token type")
  public String getType() {
    return type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenDefinition tokenDefinition = (TokenDefinition) o;
    return Objects.equals(this.capabilityDescription, tokenDefinition.capabilityDescription) &&
        Objects.equals(this.maxDaysToLive, tokenDefinition.maxDaysToLive) &&
        Objects.equals(this.maxUsages, tokenDefinition.maxUsages) &&
        Objects.equals(this.type, tokenDefinition.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capabilityDescription, maxDaysToLive, maxUsages, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenDefinition {\n");
    
    sb.append("    capabilityDescription: ").append(toIndentedString(capabilityDescription)).append("\n");
    sb.append("    maxDaysToLive: ").append(toIndentedString(maxDaysToLive)).append("\n");
    sb.append("    maxUsages: ").append(toIndentedString(maxUsages)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

