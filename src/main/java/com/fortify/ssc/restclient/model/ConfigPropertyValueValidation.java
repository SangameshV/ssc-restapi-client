/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SSC configuration property value validation type
 */
@ApiModel(description = "SSC configuration property value validation type")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class ConfigPropertyValueValidation {
  /**
   * Gets or Sets validationType
   */
  @JsonAdapter(ValidationTypeEnum.Adapter.class)
  public enum ValidationTypeEnum {
    NOT_SET("NOT_SET"),
    
    POSITIVE_INTEGER("POSITIVE_INTEGER"),
    
    MIXED_VALUES("MIXED_VALUES");

    private String value;

    ValidationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValidationTypeEnum fromValue(String text) {
      for (ValidationTypeEnum b : ValidationTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ValidationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ValidationTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("validationType")
  private ValidationTypeEnum validationType = null;

  public ConfigPropertyValueValidation validationType(ValidationTypeEnum validationType) {
    this.validationType = validationType;
    return this;
  }

   /**
   * Get validationType
   * @return validationType
  **/
  @ApiModelProperty(value = "")
  public ValidationTypeEnum getValidationType() {
    return validationType;
  }

  public void setValidationType(ValidationTypeEnum validationType) {
    this.validationType = validationType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigPropertyValueValidation configPropertyValueValidation = (ConfigPropertyValueValidation) o;
    return Objects.equals(this.validationType, configPropertyValueValidation.validationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validationType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigPropertyValueValidation {\n");
    
    sb.append("    validationType: ").append(toIndentedString(validationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

