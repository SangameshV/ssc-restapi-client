/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Object containing user preferences such as date/time format
 */
@ApiModel(description = "Object containing user preferences such as date/time format")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class UserPreferences {
  @SerializedName("dateFormat")
  private String dateFormat = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("emailAlerts")
  private Boolean emailAlerts = null;

  @SerializedName("monitorAllRuntimeApps")
  private Boolean monitorAllRuntimeApps = null;

  @SerializedName("projectVersionListMode")
  private String projectVersionListMode = null;

  @SerializedName("receiveRuntimeAlerts")
  private Boolean receiveRuntimeAlerts = null;

  @SerializedName("runtimeAlertDefinitionId")
  private Long runtimeAlertDefinitionId = null;

  @SerializedName("timeFormat")
  private String timeFormat = null;

  @SerializedName("username")
  private String username = null;

  public UserPreferences dateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * Preferred date format
   * @return dateFormat
  **/
  @ApiModelProperty(required = true, value = "Preferred date format")
  public String getDateFormat() {
    return dateFormat;
  }

  public void setDateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
  }

  public UserPreferences email(String email) {
    this.email = email;
    return this;
  }

   /**
   * User email
   * @return email
  **/
  @ApiModelProperty(required = true, value = "User email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserPreferences emailAlerts(Boolean emailAlerts) {
    this.emailAlerts = emailAlerts;
    return this;
  }

   /**
   * Receive email alerts if set to true
   * @return emailAlerts
  **/
  @ApiModelProperty(example = "false", required = true, value = "Receive email alerts if set to true")
  public Boolean isEmailAlerts() {
    return emailAlerts;
  }

  public void setEmailAlerts(Boolean emailAlerts) {
    this.emailAlerts = emailAlerts;
  }

  public UserPreferences monitorAllRuntimeApps(Boolean monitorAllRuntimeApps) {
    this.monitorAllRuntimeApps = monitorAllRuntimeApps;
    return this;
  }

   /**
   * Monitors all runtime applications if set to true
   * @return monitorAllRuntimeApps
  **/
  @ApiModelProperty(example = "false", required = true, value = "Monitors all runtime applications if set to true")
  public Boolean isMonitorAllRuntimeApps() {
    return monitorAllRuntimeApps;
  }

  public void setMonitorAllRuntimeApps(Boolean monitorAllRuntimeApps) {
    this.monitorAllRuntimeApps = monitorAllRuntimeApps;
  }

  public UserPreferences projectVersionListMode(String projectVersionListMode) {
    this.projectVersionListMode = projectVersionListMode;
    return this;
  }

   /**
   * Enum for ProjectVersionListMode with values DEFAULT, CUSTOM, ALL
   * @return projectVersionListMode
  **/
  @ApiModelProperty(required = true, value = "Enum for ProjectVersionListMode with values DEFAULT, CUSTOM, ALL")
  public String getProjectVersionListMode() {
    return projectVersionListMode;
  }

  public void setProjectVersionListMode(String projectVersionListMode) {
    this.projectVersionListMode = projectVersionListMode;
  }

  public UserPreferences receiveRuntimeAlerts(Boolean receiveRuntimeAlerts) {
    this.receiveRuntimeAlerts = receiveRuntimeAlerts;
    return this;
  }

   /**
   * Receive runtime alerts if set to true
   * @return receiveRuntimeAlerts
  **/
  @ApiModelProperty(example = "false", required = true, value = "Receive runtime alerts if set to true")
  public Boolean isReceiveRuntimeAlerts() {
    return receiveRuntimeAlerts;
  }

  public void setReceiveRuntimeAlerts(Boolean receiveRuntimeAlerts) {
    this.receiveRuntimeAlerts = receiveRuntimeAlerts;
  }

  public UserPreferences runtimeAlertDefinitionId(Long runtimeAlertDefinitionId) {
    this.runtimeAlertDefinitionId = runtimeAlertDefinitionId;
    return this;
  }

   /**
   * Runtime alert definition identifier
   * @return runtimeAlertDefinitionId
  **/
  @ApiModelProperty(required = true, value = "Runtime alert definition identifier")
  public Long getRuntimeAlertDefinitionId() {
    return runtimeAlertDefinitionId;
  }

  public void setRuntimeAlertDefinitionId(Long runtimeAlertDefinitionId) {
    this.runtimeAlertDefinitionId = runtimeAlertDefinitionId;
  }

  public UserPreferences timeFormat(String timeFormat) {
    this.timeFormat = timeFormat;
    return this;
  }

   /**
   * Preferred time format
   * @return timeFormat
  **/
  @ApiModelProperty(required = true, value = "Preferred time format")
  public String getTimeFormat() {
    return timeFormat;
  }

  public void setTimeFormat(String timeFormat) {
    this.timeFormat = timeFormat;
  }

  public UserPreferences username(String username) {
    this.username = username;
    return this;
  }

   /**
   * User name
   * @return username
  **/
  @ApiModelProperty(required = true, value = "User name")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPreferences userPreferences = (UserPreferences) o;
    return Objects.equals(this.dateFormat, userPreferences.dateFormat) &&
        Objects.equals(this.email, userPreferences.email) &&
        Objects.equals(this.emailAlerts, userPreferences.emailAlerts) &&
        Objects.equals(this.monitorAllRuntimeApps, userPreferences.monitorAllRuntimeApps) &&
        Objects.equals(this.projectVersionListMode, userPreferences.projectVersionListMode) &&
        Objects.equals(this.receiveRuntimeAlerts, userPreferences.receiveRuntimeAlerts) &&
        Objects.equals(this.runtimeAlertDefinitionId, userPreferences.runtimeAlertDefinitionId) &&
        Objects.equals(this.timeFormat, userPreferences.timeFormat) &&
        Objects.equals(this.username, userPreferences.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateFormat, email, emailAlerts, monitorAllRuntimeApps, projectVersionListMode, receiveRuntimeAlerts, runtimeAlertDefinitionId, timeFormat, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPreferences {\n");
    
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailAlerts: ").append(toIndentedString(emailAlerts)).append("\n");
    sb.append("    monitorAllRuntimeApps: ").append(toIndentedString(monitorAllRuntimeApps)).append("\n");
    sb.append("    projectVersionListMode: ").append(toIndentedString(projectVersionListMode)).append("\n");
    sb.append("    receiveRuntimeAlerts: ").append(toIndentedString(receiveRuntimeAlerts)).append("\n");
    sb.append("    runtimeAlertDefinitionId: ").append(toIndentedString(runtimeAlertDefinitionId)).append("\n");
    sb.append("    timeFormat: ").append(toIndentedString(timeFormat)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

