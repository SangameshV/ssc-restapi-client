/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * BugParam
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class BugParam {
  /**
   * Gets or Sets bugParamType
   */
  @JsonAdapter(BugParamTypeEnum.Adapter.class)
  public enum BugParamTypeEnum {
    TEXT("BUGPARAM_TEXT"),
    
    TEXTAREA("BUGPARAM_TEXTAREA"),
    
    CHOICE("BUGPARAM_CHOICE");

    private String value;

    BugParamTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BugParamTypeEnum fromValue(String text) {
      for (BugParamTypeEnum b : BugParamTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BugParamTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BugParamTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BugParamTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BugParamTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("bugParamType")
  private BugParamTypeEnum bugParamType = null;

  @SerializedName("choiceList")
  private List<String> choiceList = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("displayLabel")
  private String displayLabel = null;

  @SerializedName("hasDependentParams")
  private Boolean hasDependentParams = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("maxLength")
  private Integer maxLength = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("value")
  private String value = null;

  public BugParam bugParamType(BugParamTypeEnum bugParamType) {
    this.bugParamType = bugParamType;
    return this;
  }

   /**
   * Get bugParamType
   * @return bugParamType
  **/
  @ApiModelProperty(value = "")
  public BugParamTypeEnum getBugParamType() {
    return bugParamType;
  }

  public void setBugParamType(BugParamTypeEnum bugParamType) {
    this.bugParamType = bugParamType;
  }

  public BugParam choiceList(List<String> choiceList) {
    this.choiceList = choiceList;
    return this;
  }

  public BugParam addChoiceListItem(String choiceListItem) {
    if (this.choiceList == null) {
      this.choiceList = new ArrayList<String>();
    }
    this.choiceList.add(choiceListItem);
    return this;
  }

   /**
   * Get choiceList
   * @return choiceList
  **/
  @ApiModelProperty(value = "")
  public List<String> getChoiceList() {
    return choiceList;
  }

  public void setChoiceList(List<String> choiceList) {
    this.choiceList = choiceList;
  }

  public BugParam description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public BugParam displayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

   /**
   * Get displayLabel
   * @return displayLabel
  **/
  @ApiModelProperty(value = "")
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
  }

  public BugParam hasDependentParams(Boolean hasDependentParams) {
    this.hasDependentParams = hasDependentParams;
    return this;
  }

   /**
   * Get hasDependentParams
   * @return hasDependentParams
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasDependentParams() {
    return hasDependentParams;
  }

  public void setHasDependentParams(Boolean hasDependentParams) {
    this.hasDependentParams = hasDependentParams;
  }

  public BugParam identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public BugParam maxLength(Integer maxLength) {
    this.maxLength = maxLength;
    return this;
  }

   /**
   * Get maxLength
   * @return maxLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }

  public BugParam required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public BugParam value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BugParam bugParam = (BugParam) o;
    return Objects.equals(this.bugParamType, bugParam.bugParamType) &&
        Objects.equals(this.choiceList, bugParam.choiceList) &&
        Objects.equals(this.description, bugParam.description) &&
        Objects.equals(this.displayLabel, bugParam.displayLabel) &&
        Objects.equals(this.hasDependentParams, bugParam.hasDependentParams) &&
        Objects.equals(this.identifier, bugParam.identifier) &&
        Objects.equals(this.maxLength, bugParam.maxLength) &&
        Objects.equals(this.required, bugParam.required) &&
        Objects.equals(this.value, bugParam.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bugParamType, choiceList, description, displayLabel, hasDependentParams, identifier, maxLength, required, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BugParam {\n");
    
    sb.append("    bugParamType: ").append(toIndentedString(bugParamType)).append("\n");
    sb.append("    choiceList: ").append(toIndentedString(choiceList)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    hasDependentParams: ").append(toIndentedString(hasDependentParams)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

