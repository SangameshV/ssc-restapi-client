/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Request of exporting issue stats to CSV file
 */
@ApiModel(description = "Request of exporting issue stats to CSV file")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class ExportIssueStatsToCSVRequest {
  @SerializedName("datasetName")
  private String datasetName = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("limit")
  private Integer limit = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("start")
  private Integer start = null;

  public ExportIssueStatsToCSVRequest datasetName(String datasetName) {
    this.datasetName = datasetName;
    return this;
  }

   /**
   * Dataset name (Issue Stat)
   * @return datasetName
  **/
  @ApiModelProperty(required = true, value = "Dataset name (Issue Stat)")
  public String getDatasetName() {
    return datasetName;
  }

  public void setDatasetName(String datasetName) {
    this.datasetName = datasetName;
  }

  public ExportIssueStatsToCSVRequest fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Csv file name
   * @return fileName
  **/
  @ApiModelProperty(required = true, value = "Csv file name")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public ExportIssueStatsToCSVRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Limit
   * @return limit
  **/
  @ApiModelProperty(value = "Limit")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ExportIssueStatsToCSVRequest note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Note for csv export
   * @return note
  **/
  @ApiModelProperty(value = "Note for csv export")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public ExportIssueStatsToCSVRequest start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * Start
   * @return start
  **/
  @ApiModelProperty(value = "Start")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportIssueStatsToCSVRequest exportIssueStatsToCSVRequest = (ExportIssueStatsToCSVRequest) o;
    return Objects.equals(this.datasetName, exportIssueStatsToCSVRequest.datasetName) &&
        Objects.equals(this.fileName, exportIssueStatsToCSVRequest.fileName) &&
        Objects.equals(this.limit, exportIssueStatsToCSVRequest.limit) &&
        Objects.equals(this.note, exportIssueStatsToCSVRequest.note) &&
        Objects.equals(this.start, exportIssueStatsToCSVRequest.start);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datasetName, fileName, limit, note, start);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportIssueStatsToCSVRequest {\n");
    
    sb.append("    datasetName: ").append(toIndentedString(datasetName)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

