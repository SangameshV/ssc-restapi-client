/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.IssueFilterSelector;
import com.fortify.ssc.restclient.model.IssueSelector;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Composite object that holds information about issue attributes that can be used for issue list filtering and grouping.
 */
@ApiModel(description = "Composite object that holds information about issue attributes that can be used for issue list filtering and grouping.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class IssueFilterSelectorSet {
  @SerializedName("filterBySet")
  private List<IssueFilterSelector> filterBySet = new ArrayList<IssueFilterSelector>();

  @SerializedName("groupBySet")
  private List<IssueSelector> groupBySet = new ArrayList<IssueSelector>();

  public IssueFilterSelectorSet filterBySet(List<IssueFilterSelector> filterBySet) {
    this.filterBySet = filterBySet;
    return this;
  }

  public IssueFilterSelectorSet addFilterBySetItem(IssueFilterSelector filterBySetItem) {
    this.filterBySet.add(filterBySetItem);
    return this;
  }

   /**
   * List of all possible issues filterring attributes.
   * @return filterBySet
  **/
  @ApiModelProperty(required = true, value = "List of all possible issues filterring attributes.")
  public List<IssueFilterSelector> getFilterBySet() {
    return filterBySet;
  }

  public void setFilterBySet(List<IssueFilterSelector> filterBySet) {
    this.filterBySet = filterBySet;
  }

  public IssueFilterSelectorSet groupBySet(List<IssueSelector> groupBySet) {
    this.groupBySet = groupBySet;
    return this;
  }

  public IssueFilterSelectorSet addGroupBySetItem(IssueSelector groupBySetItem) {
    this.groupBySet.add(groupBySetItem);
    return this;
  }

   /**
   * List of all possible issues grouping attributes.
   * @return groupBySet
  **/
  @ApiModelProperty(required = true, value = "List of all possible issues grouping attributes.")
  public List<IssueSelector> getGroupBySet() {
    return groupBySet;
  }

  public void setGroupBySet(List<IssueSelector> groupBySet) {
    this.groupBySet = groupBySet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueFilterSelectorSet issueFilterSelectorSet = (IssueFilterSelectorSet) o;
    return Objects.equals(this.filterBySet, issueFilterSelectorSet.filterBySet) &&
        Objects.equals(this.groupBySet, issueFilterSelectorSet.groupBySet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterBySet, groupBySet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueFilterSelectorSet {\n");
    
    sb.append("    filterBySet: ").append(toIndentedString(filterBySet)).append("\n");
    sb.append("    groupBySet: ").append(toIndentedString(groupBySet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

