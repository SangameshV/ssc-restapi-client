/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Issue Statistics DTO object
 */
@ApiModel(description = "Issue Statistics DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class IssueStatistics {
  @SerializedName("filterSetId")
  private Long filterSetId = null;

  @SerializedName("hiddenCount")
  private Integer hiddenCount = null;

  @SerializedName("hiddenDisplayableCount")
  private Integer hiddenDisplayableCount = null;

  @SerializedName("projectVersionId")
  private Long projectVersionId = null;

  @SerializedName("removedCount")
  private Integer removedCount = null;

  @SerializedName("removedDisplayableCount")
  private Integer removedDisplayableCount = null;

  @SerializedName("suppressedCount")
  private Integer suppressedCount = null;

  @SerializedName("suppressedDisplayableCount")
  private Integer suppressedDisplayableCount = null;

  public IssueStatistics filterSetId(Long filterSetId) {
    this.filterSetId = filterSetId;
    return this;
  }

   /**
   * Filter set identifier
   * @return filterSetId
  **/
  @ApiModelProperty(required = true, value = "Filter set identifier")
  public Long getFilterSetId() {
    return filterSetId;
  }

  public void setFilterSetId(Long filterSetId) {
    this.filterSetId = filterSetId;
  }

  public IssueStatistics hiddenCount(Integer hiddenCount) {
    this.hiddenCount = hiddenCount;
    return this;
  }

   /**
   * Total number of hidden issues in the project version
   * @return hiddenCount
  **/
  @ApiModelProperty(required = true, value = "Total number of hidden issues in the project version")
  public Integer getHiddenCount() {
    return hiddenCount;
  }

  public void setHiddenCount(Integer hiddenCount) {
    this.hiddenCount = hiddenCount;
  }

   /**
   * Number of displayable hidden issues in the project version
   * @return hiddenDisplayableCount
  **/
  @ApiModelProperty(required = true, value = "Number of displayable hidden issues in the project version")
  public Integer getHiddenDisplayableCount() {
    return hiddenDisplayableCount;
  }

  public IssueStatistics projectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
    return this;
  }

   /**
   * Project version identifier
   * @return projectVersionId
  **/
  @ApiModelProperty(required = true, value = "Project version identifier")
  public Long getProjectVersionId() {
    return projectVersionId;
  }

  public void setProjectVersionId(Long projectVersionId) {
    this.projectVersionId = projectVersionId;
  }

  public IssueStatistics removedCount(Integer removedCount) {
    this.removedCount = removedCount;
    return this;
  }

   /**
   * Total number of removed issues 
   * @return removedCount
  **/
  @ApiModelProperty(required = true, value = "Total number of removed issues ")
  public Integer getRemovedCount() {
    return removedCount;
  }

  public void setRemovedCount(Integer removedCount) {
    this.removedCount = removedCount;
  }

   /**
   * Number of displayable removed issues  in the project version
   * @return removedDisplayableCount
  **/
  @ApiModelProperty(value = "Number of displayable removed issues  in the project version")
  public Integer getRemovedDisplayableCount() {
    return removedDisplayableCount;
  }

  public IssueStatistics suppressedCount(Integer suppressedCount) {
    this.suppressedCount = suppressedCount;
    return this;
  }

   /**
   * Total number of suppressed issues in the project version
   * @return suppressedCount
  **/
  @ApiModelProperty(required = true, value = "Total number of suppressed issues in the project version")
  public Integer getSuppressedCount() {
    return suppressedCount;
  }

  public void setSuppressedCount(Integer suppressedCount) {
    this.suppressedCount = suppressedCount;
  }

   /**
   * Number of displayable suppressed issues in the project version
   * @return suppressedDisplayableCount
  **/
  @ApiModelProperty(value = "Number of displayable suppressed issues in the project version")
  public Integer getSuppressedDisplayableCount() {
    return suppressedDisplayableCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueStatistics issueStatistics = (IssueStatistics) o;
    return Objects.equals(this.filterSetId, issueStatistics.filterSetId) &&
        Objects.equals(this.hiddenCount, issueStatistics.hiddenCount) &&
        Objects.equals(this.hiddenDisplayableCount, issueStatistics.hiddenDisplayableCount) &&
        Objects.equals(this.projectVersionId, issueStatistics.projectVersionId) &&
        Objects.equals(this.removedCount, issueStatistics.removedCount) &&
        Objects.equals(this.removedDisplayableCount, issueStatistics.removedDisplayableCount) &&
        Objects.equals(this.suppressedCount, issueStatistics.suppressedCount) &&
        Objects.equals(this.suppressedDisplayableCount, issueStatistics.suppressedDisplayableCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterSetId, hiddenCount, hiddenDisplayableCount, projectVersionId, removedCount, removedDisplayableCount, suppressedCount, suppressedDisplayableCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueStatistics {\n");
    
    sb.append("    filterSetId: ").append(toIndentedString(filterSetId)).append("\n");
    sb.append("    hiddenCount: ").append(toIndentedString(hiddenCount)).append("\n");
    sb.append("    hiddenDisplayableCount: ").append(toIndentedString(hiddenDisplayableCount)).append("\n");
    sb.append("    projectVersionId: ").append(toIndentedString(projectVersionId)).append("\n");
    sb.append("    removedCount: ").append(toIndentedString(removedCount)).append("\n");
    sb.append("    removedDisplayableCount: ").append(toIndentedString(removedDisplayableCount)).append("\n");
    sb.append("    suppressedCount: ").append(toIndentedString(suppressedCount)).append("\n");
    sb.append("    suppressedDisplayableCount: ").append(toIndentedString(suppressedDisplayableCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

