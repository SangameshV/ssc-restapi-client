/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.BugfieldTemplateDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Bugfield Template Group
 */
@ApiModel(description = "Bugfield Template Group")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class BugfieldTemplateGroupDto {
  @SerializedName("bugTrackerPluginId")
  private String bugTrackerPluginId = null;

  @SerializedName("deletable")
  private Boolean deletable = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("objectVersion")
  private Integer objectVersion = null;

  @SerializedName("valueList")
  private List<BugfieldTemplateDto> valueList = new ArrayList<BugfieldTemplateDto>();

   /**
   * Identifier of the bug tracker plugin associated with this template group.
   * @return bugTrackerPluginId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the bug tracker plugin associated with this template group.")
  public String getBugTrackerPluginId() {
    return bugTrackerPluginId;
  }

   /**
   * Flag that says if bugfield template group can be deleted.
   * @return deletable
  **/
  @ApiModelProperty(example = "false", required = true, value = "Flag that says if bugfield template group can be deleted.")
  public Boolean isDeletable() {
    return deletable;
  }

  public BugfieldTemplateGroupDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description for bugfield template group.
   * @return description
  **/
  @ApiModelProperty(value = "description for bugfield template group.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * unique identifier of bugfield template group.
   * @return id
  **/
  @ApiModelProperty(value = "unique identifier of bugfield template group.")
  public Long getId() {
    return id;
  }

  public BugfieldTemplateGroupDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * short name of associated bug tracker plugin. (May be null if plugin is not currently enabled.)
   * @return name
  **/
  @ApiModelProperty(required = true, value = "short name of associated bug tracker plugin. (May be null if plugin is not currently enabled.)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * version of bugfield template group stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.
   * @return objectVersion
  **/
  @ApiModelProperty(required = true, value = "version of bugfield template group stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.")
  public Integer getObjectVersion() {
    return objectVersion;
  }

  public BugfieldTemplateGroupDto valueList(List<BugfieldTemplateDto> valueList) {
    this.valueList = valueList;
    return this;
  }

  public BugfieldTemplateGroupDto addValueListItem(BugfieldTemplateDto valueListItem) {
    this.valueList.add(valueListItem);
    return this;
  }

   /**
   * Collection of all templates belonging to this bugfield template group.
   * @return valueList
  **/
  @ApiModelProperty(required = true, value = "Collection of all templates belonging to this bugfield template group.")
  public List<BugfieldTemplateDto> getValueList() {
    return valueList;
  }

  public void setValueList(List<BugfieldTemplateDto> valueList) {
    this.valueList = valueList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BugfieldTemplateGroupDto bugfieldTemplateGroupDto = (BugfieldTemplateGroupDto) o;
    return Objects.equals(this.bugTrackerPluginId, bugfieldTemplateGroupDto.bugTrackerPluginId) &&
        Objects.equals(this.deletable, bugfieldTemplateGroupDto.deletable) &&
        Objects.equals(this.description, bugfieldTemplateGroupDto.description) &&
        Objects.equals(this.id, bugfieldTemplateGroupDto.id) &&
        Objects.equals(this.name, bugfieldTemplateGroupDto.name) &&
        Objects.equals(this.objectVersion, bugfieldTemplateGroupDto.objectVersion) &&
        Objects.equals(this.valueList, bugfieldTemplateGroupDto.valueList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bugTrackerPluginId, deletable, description, id, name, objectVersion, valueList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BugfieldTemplateGroupDto {\n");
    
    sb.append("    bugTrackerPluginId: ").append(toIndentedString(bugTrackerPluginId)).append("\n");
    sb.append("    deletable: ").append(toIndentedString(deletable)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    objectVersion: ").append(toIndentedString(objectVersion)).append("\n");
    sb.append("    valueList: ").append(toIndentedString(valueList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

