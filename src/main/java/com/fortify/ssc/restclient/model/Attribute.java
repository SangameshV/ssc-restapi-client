/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.AttributeOption;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Attribute DTO object.
 */
@ApiModel(description = "Attribute DTO object.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class Attribute {
  @SerializedName("attributeDefinitionId")
  private Long attributeDefinitionId = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("values")
  private List<AttributeOption> values = new ArrayList<AttributeOption>();

  public Attribute attributeDefinitionId(Long attributeDefinitionId) {
    this.attributeDefinitionId = attributeDefinitionId;
    return this;
  }

   /**
   * ID required when referencing an existing Attribute Definition.
   * @return attributeDefinitionId
  **/
  @ApiModelProperty(required = true, value = "ID required when referencing an existing Attribute Definition.")
  public Long getAttributeDefinitionId() {
    return attributeDefinitionId;
  }

  public void setAttributeDefinitionId(Long attributeDefinitionId) {
    this.attributeDefinitionId = attributeDefinitionId;
  }

   /**
   * ID required when referencing an existing Attribute.
   * @return id
  **/
  @ApiModelProperty(value = "ID required when referencing an existing Attribute.")
  public Long getId() {
    return id;
  }

  public Attribute value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Attribute value - should be set if Attribute Definition type is NUMBER/STRING/BOOLEAN/DATE/FILE
   * @return value
  **/
  @ApiModelProperty(required = true, value = "Attribute value - should be set if Attribute Definition type is NUMBER/STRING/BOOLEAN/DATE/FILE")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public Attribute values(List<AttributeOption> values) {
    this.values = values;
    return this;
  }

  public Attribute addValuesItem(AttributeOption valuesItem) {
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Attribute Options associated with Attribute Definition with type&#x3D;SINGLE/MULTIPLE
   * @return values
  **/
  @ApiModelProperty(required = true, value = "Attribute Options associated with Attribute Definition with type=SINGLE/MULTIPLE")
  public List<AttributeOption> getValues() {
    return values;
  }

  public void setValues(List<AttributeOption> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Attribute attribute = (Attribute) o;
    return Objects.equals(this.attributeDefinitionId, attribute.attributeDefinitionId) &&
        Objects.equals(this.id, attribute.id) &&
        Objects.equals(this.value, attribute.value) &&
        Objects.equals(this.values, attribute.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeDefinitionId, id, value, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Attribute {\n");
    
    sb.append("    attributeDefinitionId: ").append(toIndentedString(attributeDefinitionId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

