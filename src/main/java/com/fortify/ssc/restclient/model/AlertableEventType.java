/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AlertableEventType
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class AlertableEventType {
  /**
   * Gets or Sets category
   */
  @JsonAdapter(CategoryEnum.Adapter.class)
  public enum CategoryEnum {
    USER_ADMINISTRATION("USER_ADMINISTRATION"),
    
    PV_ADMINISTRATION("PV_ADMINISTRATION"),
    
    PV_ISSUES("PV_ISSUES"),
    
    REPORT("REPORT"),
    
    GENERAL_ADMINISTRATION("GENERAL_ADMINISTRATION"),
    
    GOVERNANCE("GOVERNANCE"),
    
    RUNTIME_HOST("RUNTIME_HOST"),
    
    RUNTIME_FEDERATION("RUNTIME_FEDERATION"),
    
    RUNTIME_CONFIGURATION("RUNTIME_CONFIGURATION"),
    
    RUNTIME_APP_ADMINISTRATION("RUNTIME_APP_ADMINISTRATION"),
    
    FULLTEXT("FULLTEXT"),
    
    CLOUDSCAN("CLOUDSCAN");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CategoryEnum fromValue(String text) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CategoryEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("category")
  private CategoryEnum category = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("eventTypeConstant")
  private String eventTypeConstant = null;

  /**
   * Gets or Sets scope
   */
  @JsonAdapter(ScopeEnum.Adapter.class)
  public enum ScopeEnum {
    PROJECT_VERSION("PROJECT_VERSION"),
    
    RUNTIME_APP("RUNTIME_APP"),
    
    NONE("NONE"),
    
    ALL("ALL");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScopeEnum fromValue(String text) {
      for (ScopeEnum b : ScopeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScopeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScopeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ScopeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("scope")
  private ScopeEnum scope = null;

  public AlertableEventType category(CategoryEnum category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public CategoryEnum getCategory() {
    return category;
  }

  public void setCategory(CategoryEnum category) {
    this.category = category;
  }

  public AlertableEventType displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public AlertableEventType eventTypeConstant(String eventTypeConstant) {
    this.eventTypeConstant = eventTypeConstant;
    return this;
  }

   /**
   * Get eventTypeConstant
   * @return eventTypeConstant
  **/
  @ApiModelProperty(value = "")
  public String getEventTypeConstant() {
    return eventTypeConstant;
  }

  public void setEventTypeConstant(String eventTypeConstant) {
    this.eventTypeConstant = eventTypeConstant;
  }

  public AlertableEventType scope(ScopeEnum scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public ScopeEnum getScope() {
    return scope;
  }

  public void setScope(ScopeEnum scope) {
    this.scope = scope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertableEventType alertableEventType = (AlertableEventType) o;
    return Objects.equals(this.category, alertableEventType.category) &&
        Objects.equals(this.displayName, alertableEventType.displayName) &&
        Objects.equals(this.eventTypeConstant, alertableEventType.eventTypeConstant) &&
        Objects.equals(this.scope, alertableEventType.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, displayName, eventTypeConstant, scope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertableEventType {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    eventTypeConstant: ").append(toIndentedString(eventTypeConstant)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

