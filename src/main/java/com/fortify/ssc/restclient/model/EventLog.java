/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Event Log DTO object
 */
@ApiModel(description = "Event Log DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class EventLog {
  @SerializedName("detailedNote")
  private String detailedNote = null;

  @SerializedName("entityId")
  private Long entityId = null;

  @SerializedName("eventDate")
  private OffsetDateTime eventDate = null;

  /**
   * Gets or Sets eventType
   */
  @JsonAdapter(EventTypeEnum.Adapter.class)
  public enum EventTypeEnum {
    WEBUI_LOGIN_SUCCESS("WEBUI_LOGIN_SUCCESS"),
    
    WEBUI_LOGIN_FAILED("WEBUI_LOGIN_FAILED"),
    
    WEBUI_LOGOUT("WEBUI_LOGOUT"),
    
    WS_LOGIN_SUCCESS("WS_LOGIN_SUCCESS"),
    
    WS_LOGIN_FAILED("WS_LOGIN_FAILED"),
    
    LOCAL_USER_CREATED("LOCAL_USER_CREATED"),
    
    LOCAL_USER_UPDATED("LOCAL_USER_UPDATED"),
    
    LOCAL_USER_DELETED("LOCAL_USER_DELETED"),
    
    AGENT_CREDENTIAL_CREATED("AGENT_CREDENTIAL_CREATED"),
    
    AGENT_CREDENTIAL_UPDATED("AGENT_CREDENTIAL_UPDATED"),
    
    AGENT_CREDENTIAL_DELETED("AGENT_CREDENTIAL_DELETED"),
    
    LDAP_ENTITY_CREATED("LDAP_ENTITY_CREATED"),
    
    LDAP_ENTITY_UPDATED("LDAP_ENTITY_UPDATED"),
    
    LDAP_ENTITY_DELETED("LDAP_ENTITY_DELETED"),
    
    LDAP_CACHE_REFRESH_REQUESTED("LDAP_CACHE_REFRESH_REQUESTED"),
    
    LDAP_CACHE_REFRESH_STARTED("LDAP_CACHE_REFRESH_STARTED"),
    
    LDAP_CACHE_REFRESH_COMPLETED("LDAP_CACHE_REFRESH_COMPLETED"),
    
    PROJECT_VERSION_CREATED("PROJECT_VERSION_CREATED"),
    
    PROJECT_VERSION_CREATED_FROM_PREVIOUS("PROJECT_VERSION_CREATED_FROM_PREVIOUS"),
    
    PROJECT_VERSION_UPDATED("PROJECT_VERSION_UPDATED"),
    
    PROJECT_VERSION_DELETED("PROJECT_VERSION_DELETED"),
    
    PROJECT_VERSION_METADATA_UPDATED("PROJECT_VERSION_METADATA_UPDATED"),
    
    PROJECT_VERSION_ACCESS_ADDED("PROJECT_VERSION_ACCESS_ADDED"),
    
    PROJECT_VERSION_ACCESS_REMOVED("PROJECT_VERSION_ACCESS_REMOVED"),
    
    PROJECT_VERSION_BUG_TRACKER_UPDATED("PROJECT_VERSION_BUG_TRACKER_UPDATED"),
    
    SCA_RESULT_PROCESSED("SCA_RESULT_PROCESSED"),
    
    RUNTIME_RESULT_PROCESSED("RUNTIME_RESULT_PROCESSED"),
    
    EXTERNAL_RESULT_PROCESSED("EXTERNAL_RESULT_PROCESSED"),
    
    PTA_RESULT_PROCESSED("PTA_RESULT_PROCESSED"),
    
    RTA_RESULT_PROCESSED("RTA_RESULT_PROCESSED"),
    
    ARTIFACT_UPLOAD_REQUESTED("ARTIFACT_UPLOAD_REQUESTED"),
    
    ARTIFACT_UPLOAD_STARTED("ARTIFACT_UPLOAD_STARTED"),
    
    ARTIFACT_UPLOAD_COMPLETED("ARTIFACT_UPLOAD_COMPLETED"),
    
    ARTIFACT_UPLOAD_FAILED("ARTIFACT_UPLOAD_FAILED"),
    
    ARTIFACT_UPLOAD_CANCELLED("ARTIFACT_UPLOAD_CANCELLED"),
    
    ARTIFACT_DELETE_REQUESTED("ARTIFACT_DELETE_REQUESTED"),
    
    ARTIFACT_DELETE_STARTED("ARTIFACT_DELETE_STARTED"),
    
    ARTIFACT_DELETE_COMPLETED("ARTIFACT_DELETE_COMPLETED"),
    
    ARTIFACT_DELETE_FAILED("ARTIFACT_DELETE_FAILED"),
    
    ARTIFACT_DELETE_CANCELLED("ARTIFACT_DELETE_CANCELLED"),
    
    JOB_CANCELLED("JOB_CANCELLED"),
    
    ARTIFACT_PURGE_REQUESTED("ARTIFACT_PURGE_REQUESTED"),
    
    ARTIFACT_PURGE_REQUEST_STARTED("ARTIFACT_PURGE_REQUEST_STARTED"),
    
    ARTIFACT_PURGE_COMPLETED("ARTIFACT_PURGE_COMPLETED"),
    
    ARTIFACT_PURGE_FAILED("ARTIFACT_PURGE_FAILED"),
    
    ARTIFACT_PURGE_REQUEST_FINISHED("ARTIFACT_PURGE_REQUEST_FINISHED"),
    
    ARTIFACT_PURGE_CANCELLED("ARTIFACT_PURGE_CANCELLED"),
    
    HISTORICAL_SNAPSHOT_COLLECTION_STARTED("HISTORICAL_SNAPSHOT_COLLECTION_STARTED"),
    
    HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_COMPLETED("HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_COMPLETED"),
    
    HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_FAILED("HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_FAILED"),
    
    HISTORICAL_SNAPSHOT_COLLECTION_NO_UPDATES("HISTORICAL_SNAPSHOT_COLLECTION_NO_UPDATES"),
    
    AUDIT_PERFORMED("AUDIT_PERFORMED"),
    
    ARTIFACT_UPLOAD_REQUIRES_AUTH("ARTIFACT_UPLOAD_REQUIRES_AUTH"),
    
    SOURCE_CODE_UPLOADED("SOURCE_CODE_UPLOADED"),
    
    FILTERSET_FOLDER_REFRESH_REQUESTED("FILTERSET_FOLDER_REFRESH_REQUESTED"),
    
    FILTERSET_FOLDER_REFRESH_COMPLETED("FILTERSET_FOLDER_REFRESH_COMPLETED"),
    
    FILTERSET_FOLDER_REFRESH_FAILED("FILTERSET_FOLDER_REFRESH_FAILED"),
    
    DYNAMIC_SCAN_CREATED("DYNAMIC_SCAN_CREATED"),
    
    DYNAMIC_SCAN_EDITED("DYNAMIC_SCAN_EDITED"),
    
    DYNAMIC_SCAN_CANCELED("DYNAMIC_SCAN_CANCELED"),
    
    DYNAMIC_SCAN_COMPLETED("DYNAMIC_SCAN_COMPLETED"),
    
    DYNAMIC_SCAN_PICKED_UP("DYNAMIC_SCAN_PICKED_UP"),
    
    BATCH_BUG_FILING_REQUESTED("BATCH_BUG_FILING_REQUESTED"),
    
    BATCH_BUG_FILING_REQUEST_FAILED("BATCH_BUG_FILING_REQUEST_FAILED"),
    
    BATCH_BUG_FILING_STARTED("BATCH_BUG_FILING_STARTED"),
    
    BATCH_BUG_FILING_ENDED("BATCH_BUG_FILING_ENDED"),
    
    BATCH_BUG_FILING_FAILED("BATCH_BUG_FILING_FAILED"),
    
    BUG_FILED("BUG_FILED"),
    
    BUG_FAILED_TO_FILE("BUG_FAILED_TO_FILE"),
    
    BUG_STATE_MANAGEMENT_STARTED("BUG_STATE_MANAGEMENT_STARTED"),
    
    BUG_STATE_MANAGEMENT_ENDED("BUG_STATE_MANAGEMENT_ENDED"),
    
    BUG_STATE_MANAGEMENT_ENDED_WITH_ERRORS("BUG_STATE_MANAGEMENT_ENDED_WITH_ERRORS"),
    
    BUG_UPDATED("BUG_UPDATED"),
    
    BUG_FAILED_TO_UPDATE("BUG_FAILED_TO_UPDATE"),
    
    COMMENT_ADDED_TO_ISSUE("COMMENT_ADDED_TO_ISSUE"),
    
    AUDIT_ASSISTANT_ISSUES_SUBMITTED("AUDIT_ASSISTANT_ISSUES_SUBMITTED"),
    
    AUDIT_ASSISTANT_ISSUES_RETRIEVED("AUDIT_ASSISTANT_ISSUES_RETRIEVED"),
    
    AUDIT_ASSISTANT_FPR_UPLOAD_STARTED("AUDIT_ASSISTANT_FPR_UPLOAD_STARTED"),
    
    AUDIT_ASSISTANT_TRAINING_SENT("AUDIT_ASSISTANT_TRAINING_SENT"),
    
    AUDIT_ASSISTANT_TEST_CONNECTION_FAILED("AUDIT_ASSISTANT_TEST_CONNECTION_FAILED"),
    
    AUDIT_ASSISTANT_ISSUES_SUBMIT_FAILED("AUDIT_ASSISTANT_ISSUES_SUBMIT_FAILED"),
    
    AUDIT_ASSISTANT_ISSUES_RETRIEVE_FAILED("AUDIT_ASSISTANT_ISSUES_RETRIEVE_FAILED"),
    
    AUDIT_ASSISTANT_FPR_UPLOAD_FAILED("AUDIT_ASSISTANT_FPR_UPLOAD_FAILED"),
    
    AUDIT_ASSISTANT_TRAINING_SENT_FAILED("AUDIT_ASSISTANT_TRAINING_SENT_FAILED"),
    
    REPORT_GENERATION_REQUESTED("REPORT_GENERATION_REQUESTED"),
    
    REPORT_GENERATION_COMPLETED("REPORT_GENERATION_COMPLETED"),
    
    REPORT_GENERATION_FAILED("REPORT_GENERATION_FAILED"),
    
    REPORT_GENERATION_CANCELLED("REPORT_GENERATION_CANCELLED"),
    
    REPORT_DELETED("REPORT_DELETED"),
    
    RULEPACK_SERVER_UPDATE("RULEPACK_SERVER_UPDATE"),
    
    RULEPACK_USER_UPLOAD("RULEPACK_USER_UPLOAD"),
    
    RULEPACK_DELETED("RULEPACK_DELETED"),
    
    RULEPACK_DOWNLOAD("RULEPACK_DOWNLOAD"),
    
    RULEPACK_CLIENT_UPDATE("RULEPACK_CLIENT_UPDATE"),
    
    DOCUMENT_ARTIFACT_CREATED("DOCUMENT_ARTIFACT_CREATED"),
    
    DOCUMENT_ARTIFACT_UPDATED("DOCUMENT_ARTIFACT_UPDATED"),
    
    DOCUMENT_ARTIFACT_DELETED("DOCUMENT_ARTIFACT_DELETED"),
    
    TASK_INSTANCE_CREATED("TASK_INSTANCE_CREATED"),
    
    TASK_INSTANCE_UPDATED("TASK_INSTANCE_UPDATED"),
    
    TASK_INSTANCE_DELETED("TASK_INSTANCE_DELETED"),
    
    TASK_INSTANCE_SIGNOFF_UPDATED("TASK_INSTANCE_SIGNOFF_UPDATED"),
    
    ACTIVITY_INSTANCE_SIGNOFF_UPDATED("ACTIVITY_INSTANCE_SIGNOFF_UPDATED"),
    
    REQUIREMENT_INSTANCE_SIGNOFF_UPDATED("REQUIREMENT_INSTANCE_SIGNOFF_UPDATED"),
    
    REQUIREMENT_TEMPLATE_INSTANCE_SIGNOFF_UPDATED("REQUIREMENT_TEMPLATE_INSTANCE_SIGNOFF_UPDATED"),
    
    TASK_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF("TASK_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF"),
    
    ACTIVITY_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF("ACTIVITY_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF"),
    
    REQUIREMENT_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF("REQUIREMENT_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF"),
    
    REQUIREMENT_TEMPLATE_DUE_DATE_PASSED_NO_SIGNOFF("REQUIREMENT_TEMPLATE_DUE_DATE_PASSED_NO_SIGNOFF"),
    
    SDL_COMMENT_CREATED("SDL_COMMENT_CREATED"),
    
    PROJECT_PERSONA_ASSIGNMENT_UPDATED("PROJECT_PERSONA_ASSIGNMENT_UPDATED"),
    
    PERSONA_ASSIGNMENT_UPDATED("PERSONA_ASSIGNMENT_UPDATED"),
    
    WORK_OWNER_UPDATED("WORK_OWNER_UPDATED"),
    
    DUE_DATE_UPDATED("DUE_DATE_UPDATED"),
    
    SESSION_TIMEOUT("SESSION_TIMEOUT"),
    
    REQ_TEMPLATE_CREATED("REQ_TEMPLATE_CREATED"),
    
    REQ_TEMPLATE_UPDATED("REQ_TEMPLATE_UPDATED"),
    
    ACTIVITY_CREATED("ACTIVITY_CREATED"),
    
    ACTIVITY_UPDATED("ACTIVITY_UPDATED"),
    
    VARIABLE_CREATED("VARIABLE_CREATED"),
    
    VARIABLE_UPDATED("VARIABLE_UPDATED"),
    
    VARIABLE_DELETED("VARIABLE_DELETED"),
    
    MEASUREMENT_AGENT_CREATED("MEASUREMENT_AGENT_CREATED"),
    
    MEASUREMENT_AGENT_UPDATED("MEASUREMENT_AGENT_UPDATED"),
    
    MEASUREMENT_AGENT_DELETED("MEASUREMENT_AGENT_DELETED"),
    
    DOCUMENT_DEF_CREATED("DOCUMENT_DEF_CREATED"),
    
    DOCUMENT_DEF_UPDATED("DOCUMENT_DEF_UPDATED"),
    
    PROJECT_TEMPLATE_CREATED("PROJECT_TEMPLATE_CREATED"),
    
    PROJECT_TEMPLATE_UPDATED("PROJECT_TEMPLATE_UPDATED"),
    
    PROJECT_TEMPLATE_DELETED("PROJECT_TEMPLATE_DELETED"),
    
    ASSIGNMENT_RULES_UPDATED("ASSIGNMENT_RULES_UPDATED"),
    
    PERSONA_CREATED("PERSONA_CREATED"),
    
    PERSONA_UPDATED("PERSONA_UPDATED"),
    
    PERSONA_DELETED("PERSONA_DELETED"),
    
    ATTR_CREATED("ATTR_CREATED"),
    
    ATTR_UPDATED("ATTR_UPDATED"),
    
    ATTR_DELETED("ATTR_DELETED"),
    
    PROJECT_VERSION_CUSTOM_TAG_ASSIGNMENT("PROJECT_VERSION_CUSTOM_TAG_ASSIGNMENT"),
    
    PROJECT_VERSION_PRIMARY_TAG_UPDATE("PROJECT_VERSION_PRIMARY_TAG_UPDATE"),
    
    REPORT_DEFINITION_CREATED("REPORT_DEFINITION_CREATED"),
    
    REPORT_DEFINITION_UPDATED("REPORT_DEFINITION_UPDATED"),
    
    REPORT_DEFINITION_DELETED("REPORT_DEFINITION_DELETED"),
    
    REPORT_LIBRARY_CREATED("REPORT_LIBRARY_CREATED"),
    
    REPORT_LIBRARY_UPDATED("REPORT_LIBRARY_UPDATED"),
    
    REPORT_LIBRARY_DELETED("REPORT_LIBRARY_DELETED"),
    
    RUNTIME_HOST_CONNECTED("RUNTIME_HOST_CONNECTED"),
    
    RUNTIME_HOST_DISCONNECTED("RUNTIME_HOST_DISCONNECTED"),
    
    RUNTIME_HOST_CREATED("RUNTIME_HOST_CREATED"),
    
    RUNTIME_HOST_DELETED("RUNTIME_HOST_DELETED"),
    
    RUNTIME_HOST_DISCOVERED("RUNTIME_HOST_DISCOVERED"),
    
    RUNTIME_HOST_ENABLED("RUNTIME_HOST_ENABLED"),
    
    RUNTIME_HOST_DISABLED("RUNTIME_HOST_DISABLED"),
    
    RUNTIME_HOST_AUTH_RESET("RUNTIME_HOST_AUTH_RESET"),
    
    ACCEPT_NEW_HOSTS_ENABLED("ACCEPT_NEW_HOSTS_ENABLED"),
    
    ACCEPT_NEW_HOSTS_DISABLED("ACCEPT_NEW_HOSTS_DISABLED"),
    
    DISABLED_HOST_CONNECTION("DISABLED_HOST_CONNECTION"),
    
    RUNTIME_APPLICATION_ASSIGNMENT_RULES_UPDATED("RUNTIME_APPLICATION_ASSIGNMENT_RULES_UPDATED"),
    
    REAPPLY_APPLICATION_ASSIGNMENT_RULES_REQUESTED("REAPPLY_APPLICATION_ASSIGNMENT_RULES_REQUESTED"),
    
    REAPPLY_APPLICATION_ASSIGNMENT_RULES_COMPLETED("REAPPLY_APPLICATION_ASSIGNMENT_RULES_COMPLETED"),
    
    REAPPLY_APPLICATION_ASSIGNMENT_RULES_FAILED("REAPPLY_APPLICATION_ASSIGNMENT_RULES_FAILED"),
    
    RUNTIME_CONFIGURATION_CREATED("RUNTIME_CONFIGURATION_CREATED"),
    
    RUNTIME_CONFIGURATION_UPDATED("RUNTIME_CONFIGURATION_UPDATED"),
    
    RUNTIME_CONFIGURATION_DELETED("RUNTIME_CONFIGURATION_DELETED"),
    
    RUNTIME_CONFIGURATION_TEMPLATE_UPDATED("RUNTIME_CONFIGURATION_TEMPLATE_UPDATED"),
    
    RUNTIME_EH_CREATED("RUNTIME_EH_CREATED"),
    
    RUNTIME_EH_UPDATED("RUNTIME_EH_UPDATED"),
    
    RUNTIME_EH_DELETED("RUNTIME_EH_DELETED"),
    
    RUNTIME_SETTINGS_UPDATED("RUNTIME_SETTINGS_UPDATED"),
    
    RUNTIME_RULEPACK_CONFIG_UPDATED("RUNTIME_RULEPACK_CONFIG_UPDATED"),
    
    RUNTIME_EVENT_RECEIVED("RUNTIME_EVENT_RECEIVED"),
    
    RUNTIME_ALERT_RECEIVED("RUNTIME_ALERT_RECEIVED"),
    
    FEDERATION_CREATED("FEDERATION_CREATED"),
    
    FEDERATION_UPDATED("FEDERATION_UPDATED"),
    
    FEDERATION_DELETED("FEDERATION_DELETED"),
    
    RTAPP_CREATED("RTAPP_CREATED"),
    
    RTAPP_UPDATED("RTAPP_UPDATED"),
    
    RTAPP_DELETED("RTAPP_DELETED"),
    
    RTAPP_ACCESS_ADDED("RTAPP_ACCESS_ADDED"),
    
    RTAPP_ACCESS_REMOVED("RTAPP_ACCESS_REMOVED"),
    
    USERROLE_CREATED("USERROLE_CREATED"),
    
    USERROLE_UPDATED("USERROLE_UPDATED"),
    
    USERROLE_DELETED("USERROLE_DELETED"),
    
    CLOUD_SCAN_POLLED("CLOUD_SCAN_POLLED"),
    
    CLOUD_POOL_CREATED("CLOUD_POOL_CREATED"),
    
    CLOUD_POOL_UPDATED("CLOUD_POOL_UPDATED"),
    
    CLOUD_POOL_DELETED("CLOUD_POOL_DELETED"),
    
    CLOUD_POOL_AVS_UPDATED("CLOUD_POOL_AVS_UPDATED"),
    
    CLOUD_POOL_SENSORS_UPDATED("CLOUD_POOL_SENSORS_UPDATED"),
    
    CLOUD_JOB_CANCELED("CLOUD_JOB_CANCELED"),
    
    CLOUD_JOB_FPR_DOWNLOADED("CLOUD_JOB_FPR_DOWNLOADED"),
    
    CLOUD_JOB_LOG_DOWNLOADED("CLOUD_JOB_LOG_DOWNLOADED"),
    
    INDEX_MAINTENANCE_STARTED("INDEX_MAINTENANCE_STARTED"),
    
    INDEX_MAINTENANCE_COMPLETED("INDEX_MAINTENANCE_COMPLETED"),
    
    FULL_REINDEX_STARTED("FULL_REINDEX_STARTED"),
    
    FULL_REINDEX_COMPLETED("FULL_REINDEX_COMPLETED"),
    
    INDEX_NEW_ISSUES_STARTED("INDEX_NEW_ISSUES_STARTED"),
    
    INDEX_NEW_ISSUES_COMPLETED("INDEX_NEW_ISSUES_COMPLETED"),
    
    SSC_CONFIGURATION_UPDATED("SSC_CONFIGURATION_UPDATED"),
    
    LDAP_CONFIG_CREATED("LDAP_CONFIG_CREATED"),
    
    LDAP_CONFIG_UPDATED("LDAP_CONFIG_UPDATED"),
    
    LDAP_CONFIG_DELETED("LDAP_CONFIG_DELETED"),
    
    LDAP_CONFIG_DEFAULT_CHANGED("LDAP_CONFIG_DEFAULT_CHANGED"),
    
    SEED_BUNDLE_UPLOAD_COMPLETED("SEED_BUNDLE_UPLOAD_COMPLETED"),
    
    SEED_BUNDLE_UPLOAD_FAILED("SEED_BUNDLE_UPLOAD_FAILED"),
    
    SEED_BUNDLE_COMPLETED("SEED_BUNDLE_COMPLETED"),
    
    SEED_BUNDLE_FAILED("SEED_BUNDLE_FAILED");

    private String value;

    EventTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EventTypeEnum fromValue(String text) {
      for (EventTypeEnum b : EventTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EventTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EventTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EventTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EventTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("eventType")
  private EventTypeEnum eventType = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("projectVersionId")
  private Long projectVersionId = null;

  @SerializedName("userName")
  private String userName = null;

   /**
   * Get detailedNote
   * @return detailedNote
  **/
  @ApiModelProperty(value = "")
  public String getDetailedNote() {
    return detailedNote;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public Long getEntityId() {
    return entityId;
  }

   /**
   * Get eventDate
   * @return eventDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEventDate() {
    return eventDate;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @ApiModelProperty(value = "")
  public EventTypeEnum getEventType() {
    return eventType;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

   /**
   * Get projectVersionId
   * @return projectVersionId
  **/
  @ApiModelProperty(value = "")
  public Long getProjectVersionId() {
    return projectVersionId;
  }

   /**
   * Get userName
   * @return userName
  **/
  @ApiModelProperty(value = "")
  public String getUserName() {
    return userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventLog eventLog = (EventLog) o;
    return Objects.equals(this.detailedNote, eventLog.detailedNote) &&
        Objects.equals(this.entityId, eventLog.entityId) &&
        Objects.equals(this.eventDate, eventLog.eventDate) &&
        Objects.equals(this.eventType, eventLog.eventType) &&
        Objects.equals(this.id, eventLog.id) &&
        Objects.equals(this.projectVersionId, eventLog.projectVersionId) &&
        Objects.equals(this.userName, eventLog.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detailedNote, entityId, eventDate, eventType, id, projectVersionId, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventLog {\n");
    
    sb.append("    detailedNote: ").append(toIndentedString(detailedNote)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectVersionId: ").append(toIndentedString(projectVersionId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

