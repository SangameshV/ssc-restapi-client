/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.Variable;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Performance indicators enable you to combine variables into metrics that are normalized across project version boundaries
 */
@ApiModel(description = "Performance indicators enable you to combine variables into metrics that are normalized across project version boundaries")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class PerformanceIndicator {
  @SerializedName("description")
  private String description = null;

  @SerializedName("equation")
  private String equation = null;

  @SerializedName("guid")
  private String guid = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("inUse")
  private Boolean inUse = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("objectVersion")
  private Integer objectVersion = null;

  @SerializedName("publishVersion")
  private Integer publishVersion = null;

  /**
   * Gets or Sets range
   */
  @JsonAdapter(RangeEnum.Adapter.class)
  public enum RangeEnum {
    INTEGER("Integer"),
    
    PERCENT("Percent");

    private String value;

    RangeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RangeEnum fromValue(String text) {
      for (RangeEnum b : RangeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RangeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RangeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RangeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RangeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("range")
  private RangeEnum range = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SYSTEM_DEFINED("SYSTEM_DEFINED"),
    
    USER_DEFINED("USER_DEFINED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("variables")
  private List<Variable> variables = null;

  public PerformanceIndicator description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PerformanceIndicator equation(String equation) {
    this.equation = equation;
    return this;
  }

   /**
   * Get equation
   * @return equation
  **/
  @ApiModelProperty(required = true, value = "")
  public String getEquation() {
    return equation;
  }

  public void setEquation(String equation) {
    this.equation = equation;
  }

  public PerformanceIndicator guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @ApiModelProperty(value = "")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public PerformanceIndicator inUse(Boolean inUse) {
    this.inUse = inUse;
    return this;
  }

   /**
   * Get inUse
   * @return inUse
  **/
  @ApiModelProperty(value = "")
  public Boolean isInUse() {
    return inUse;
  }

  public void setInUse(Boolean inUse) {
    this.inUse = inUse;
  }

  public PerformanceIndicator name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PerformanceIndicator objectVersion(Integer objectVersion) {
    this.objectVersion = objectVersion;
    return this;
  }

   /**
   * Get objectVersion
   * @return objectVersion
  **/
  @ApiModelProperty(value = "")
  public Integer getObjectVersion() {
    return objectVersion;
  }

  public void setObjectVersion(Integer objectVersion) {
    this.objectVersion = objectVersion;
  }

  public PerformanceIndicator publishVersion(Integer publishVersion) {
    this.publishVersion = publishVersion;
    return this;
  }

   /**
   * Get publishVersion
   * @return publishVersion
  **/
  @ApiModelProperty(value = "")
  public Integer getPublishVersion() {
    return publishVersion;
  }

  public void setPublishVersion(Integer publishVersion) {
    this.publishVersion = publishVersion;
  }

  public PerformanceIndicator range(RangeEnum range) {
    this.range = range;
    return this;
  }

   /**
   * Get range
   * @return range
  **/
  @ApiModelProperty(required = true, value = "")
  public RangeEnum getRange() {
    return range;
  }

  public void setRange(RangeEnum range) {
    this.range = range;
  }

  public PerformanceIndicator type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PerformanceIndicator variables(List<Variable> variables) {
    this.variables = variables;
    return this;
  }

  public PerformanceIndicator addVariablesItem(Variable variablesItem) {
    if (this.variables == null) {
      this.variables = new ArrayList<Variable>();
    }
    this.variables.add(variablesItem);
    return this;
  }

   /**
   * Get variables
   * @return variables
  **/
  @ApiModelProperty(value = "")
  public List<Variable> getVariables() {
    return variables;
  }

  public void setVariables(List<Variable> variables) {
    this.variables = variables;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceIndicator performanceIndicator = (PerformanceIndicator) o;
    return Objects.equals(this.description, performanceIndicator.description) &&
        Objects.equals(this.equation, performanceIndicator.equation) &&
        Objects.equals(this.guid, performanceIndicator.guid) &&
        Objects.equals(this.id, performanceIndicator.id) &&
        Objects.equals(this.inUse, performanceIndicator.inUse) &&
        Objects.equals(this.name, performanceIndicator.name) &&
        Objects.equals(this.objectVersion, performanceIndicator.objectVersion) &&
        Objects.equals(this.publishVersion, performanceIndicator.publishVersion) &&
        Objects.equals(this.range, performanceIndicator.range) &&
        Objects.equals(this.type, performanceIndicator.type) &&
        Objects.equals(this.variables, performanceIndicator.variables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, equation, guid, id, inUse, name, objectVersion, publishVersion, range, type, variables);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceIndicator {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    equation: ").append(toIndentedString(equation)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inUse: ").append(toIndentedString(inUse)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    objectVersion: ").append(toIndentedString(objectVersion)).append("\n");
    sb.append("    publishVersion: ").append(toIndentedString(publishVersion)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

