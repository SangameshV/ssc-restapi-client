/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Issue audit history record.
 */
@ApiModel(description = "Issue audit history record.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class IssueAuditHistoryDto {
  @SerializedName("attributeName")
  private String attributeName = null;

  @SerializedName("auditDateTime")
  private OffsetDateTime auditDateTime = null;

  @SerializedName("conflict")
  private Boolean conflict = null;

  @SerializedName("issueId")
  private Long issueId = null;

  @SerializedName("newValue")
  private String newValue = null;

  @SerializedName("oldValue")
  private String oldValue = null;

  @SerializedName("sequenceNumber")
  private Integer sequenceNumber = null;

  @SerializedName("userName")
  private String userName = null;

   /**
   * Changed attribute name.
   * @return attributeName
  **/
  @ApiModelProperty(required = true, value = "Changed attribute name.")
  public String getAttributeName() {
    return attributeName;
  }

   /**
   * Date and time when audit was performed.
   * @return auditDateTime
  **/
  @ApiModelProperty(required = true, value = "Date and time when audit was performed.")
  public OffsetDateTime getAuditDateTime() {
    return auditDateTime;
  }

   /**
   * Flag that indicates if there were any conflicts when audit information was merged.
   * @return conflict
  **/
  @ApiModelProperty(example = "false", required = true, value = "Flag that indicates if there were any conflicts when audit information was merged.")
  public Boolean isConflict() {
    return conflict;
  }

   /**
   * ID of the issue the history record belongs to
   * @return issueId
  **/
  @ApiModelProperty(required = true, value = "ID of the issue the history record belongs to")
  public Long getIssueId() {
    return issueId;
  }

   /**
   * Attribute value after audit.
   * @return newValue
  **/
  @ApiModelProperty(required = true, value = "Attribute value after audit.")
  public String getNewValue() {
    return newValue;
  }

   /**
   * Attribute value before audit.
   * @return oldValue
  **/
  @ApiModelProperty(required = true, value = "Attribute value before audit.")
  public String getOldValue() {
    return oldValue;
  }

   /**
   * Sequence number of the history record in the list of all audit history records for the issue.
   * @return sequenceNumber
  **/
  @ApiModelProperty(required = true, value = "Sequence number of the history record in the list of all audit history records for the issue.")
  public Integer getSequenceNumber() {
    return sequenceNumber;
  }

   /**
   * Name of the user who performed the audit.
   * @return userName
  **/
  @ApiModelProperty(required = true, value = "Name of the user who performed the audit.")
  public String getUserName() {
    return userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueAuditHistoryDto issueAuditHistoryDto = (IssueAuditHistoryDto) o;
    return Objects.equals(this.attributeName, issueAuditHistoryDto.attributeName) &&
        Objects.equals(this.auditDateTime, issueAuditHistoryDto.auditDateTime) &&
        Objects.equals(this.conflict, issueAuditHistoryDto.conflict) &&
        Objects.equals(this.issueId, issueAuditHistoryDto.issueId) &&
        Objects.equals(this.newValue, issueAuditHistoryDto.newValue) &&
        Objects.equals(this.oldValue, issueAuditHistoryDto.oldValue) &&
        Objects.equals(this.sequenceNumber, issueAuditHistoryDto.sequenceNumber) &&
        Objects.equals(this.userName, issueAuditHistoryDto.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, auditDateTime, conflict, issueId, newValue, oldValue, sequenceNumber, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueAuditHistoryDto {\n");
    
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    auditDateTime: ").append(toIndentedString(auditDateTime)).append("\n");
    sb.append("    conflict: ").append(toIndentedString(conflict)).append("\n");
    sb.append("    issueId: ").append(toIndentedString(issueId)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

