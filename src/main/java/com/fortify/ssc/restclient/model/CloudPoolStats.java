/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Cloudscan worker pool statistics
 */
@ApiModel(description = "Cloudscan worker pool statistics")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class CloudPoolStats {
  @SerializedName("activeWorkerCount")
  private Long activeWorkerCount = null;

  @SerializedName("idleWorkerCount")
  private Long idleWorkerCount = null;

  @SerializedName("inactiveWorkerCount")
  private Long inactiveWorkerCount = null;

  @SerializedName("pendingJobCount")
  private Long pendingJobCount = null;

  @SerializedName("processingWorkerCount")
  private Long processingWorkerCount = null;

  @SerializedName("projectVersionCount")
  private Long projectVersionCount = null;

  @SerializedName("runningJobCount")
  private Long runningJobCount = null;

  @SerializedName("staleWorkerCount")
  private Long staleWorkerCount = null;

  @SerializedName("totalWorkerCount")
  private Long totalWorkerCount = null;

  public CloudPoolStats activeWorkerCount(Long activeWorkerCount) {
    this.activeWorkerCount = activeWorkerCount;
    return this;
  }

   /**
   * Get activeWorkerCount
   * @return activeWorkerCount
  **/
  @ApiModelProperty(value = "")
  public Long getActiveWorkerCount() {
    return activeWorkerCount;
  }

  public void setActiveWorkerCount(Long activeWorkerCount) {
    this.activeWorkerCount = activeWorkerCount;
  }

  public CloudPoolStats idleWorkerCount(Long idleWorkerCount) {
    this.idleWorkerCount = idleWorkerCount;
    return this;
  }

   /**
   * Get idleWorkerCount
   * @return idleWorkerCount
  **/
  @ApiModelProperty(value = "")
  public Long getIdleWorkerCount() {
    return idleWorkerCount;
  }

  public void setIdleWorkerCount(Long idleWorkerCount) {
    this.idleWorkerCount = idleWorkerCount;
  }

  public CloudPoolStats inactiveWorkerCount(Long inactiveWorkerCount) {
    this.inactiveWorkerCount = inactiveWorkerCount;
    return this;
  }

   /**
   * Get inactiveWorkerCount
   * @return inactiveWorkerCount
  **/
  @ApiModelProperty(value = "")
  public Long getInactiveWorkerCount() {
    return inactiveWorkerCount;
  }

  public void setInactiveWorkerCount(Long inactiveWorkerCount) {
    this.inactiveWorkerCount = inactiveWorkerCount;
  }

  public CloudPoolStats pendingJobCount(Long pendingJobCount) {
    this.pendingJobCount = pendingJobCount;
    return this;
  }

   /**
   * Get pendingJobCount
   * @return pendingJobCount
  **/
  @ApiModelProperty(value = "")
  public Long getPendingJobCount() {
    return pendingJobCount;
  }

  public void setPendingJobCount(Long pendingJobCount) {
    this.pendingJobCount = pendingJobCount;
  }

  public CloudPoolStats processingWorkerCount(Long processingWorkerCount) {
    this.processingWorkerCount = processingWorkerCount;
    return this;
  }

   /**
   * Get processingWorkerCount
   * @return processingWorkerCount
  **/
  @ApiModelProperty(value = "")
  public Long getProcessingWorkerCount() {
    return processingWorkerCount;
  }

  public void setProcessingWorkerCount(Long processingWorkerCount) {
    this.processingWorkerCount = processingWorkerCount;
  }

  public CloudPoolStats projectVersionCount(Long projectVersionCount) {
    this.projectVersionCount = projectVersionCount;
    return this;
  }

   /**
   * Get projectVersionCount
   * @return projectVersionCount
  **/
  @ApiModelProperty(value = "")
  public Long getProjectVersionCount() {
    return projectVersionCount;
  }

  public void setProjectVersionCount(Long projectVersionCount) {
    this.projectVersionCount = projectVersionCount;
  }

  public CloudPoolStats runningJobCount(Long runningJobCount) {
    this.runningJobCount = runningJobCount;
    return this;
  }

   /**
   * Get runningJobCount
   * @return runningJobCount
  **/
  @ApiModelProperty(value = "")
  public Long getRunningJobCount() {
    return runningJobCount;
  }

  public void setRunningJobCount(Long runningJobCount) {
    this.runningJobCount = runningJobCount;
  }

  public CloudPoolStats staleWorkerCount(Long staleWorkerCount) {
    this.staleWorkerCount = staleWorkerCount;
    return this;
  }

   /**
   * Get staleWorkerCount
   * @return staleWorkerCount
  **/
  @ApiModelProperty(value = "")
  public Long getStaleWorkerCount() {
    return staleWorkerCount;
  }

  public void setStaleWorkerCount(Long staleWorkerCount) {
    this.staleWorkerCount = staleWorkerCount;
  }

  public CloudPoolStats totalWorkerCount(Long totalWorkerCount) {
    this.totalWorkerCount = totalWorkerCount;
    return this;
  }

   /**
   * Get totalWorkerCount
   * @return totalWorkerCount
  **/
  @ApiModelProperty(value = "")
  public Long getTotalWorkerCount() {
    return totalWorkerCount;
  }

  public void setTotalWorkerCount(Long totalWorkerCount) {
    this.totalWorkerCount = totalWorkerCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudPoolStats cloudPoolStats = (CloudPoolStats) o;
    return Objects.equals(this.activeWorkerCount, cloudPoolStats.activeWorkerCount) &&
        Objects.equals(this.idleWorkerCount, cloudPoolStats.idleWorkerCount) &&
        Objects.equals(this.inactiveWorkerCount, cloudPoolStats.inactiveWorkerCount) &&
        Objects.equals(this.pendingJobCount, cloudPoolStats.pendingJobCount) &&
        Objects.equals(this.processingWorkerCount, cloudPoolStats.processingWorkerCount) &&
        Objects.equals(this.projectVersionCount, cloudPoolStats.projectVersionCount) &&
        Objects.equals(this.runningJobCount, cloudPoolStats.runningJobCount) &&
        Objects.equals(this.staleWorkerCount, cloudPoolStats.staleWorkerCount) &&
        Objects.equals(this.totalWorkerCount, cloudPoolStats.totalWorkerCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeWorkerCount, idleWorkerCount, inactiveWorkerCount, pendingJobCount, processingWorkerCount, projectVersionCount, runningJobCount, staleWorkerCount, totalWorkerCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudPoolStats {\n");
    
    sb.append("    activeWorkerCount: ").append(toIndentedString(activeWorkerCount)).append("\n");
    sb.append("    idleWorkerCount: ").append(toIndentedString(idleWorkerCount)).append("\n");
    sb.append("    inactiveWorkerCount: ").append(toIndentedString(inactiveWorkerCount)).append("\n");
    sb.append("    pendingJobCount: ").append(toIndentedString(pendingJobCount)).append("\n");
    sb.append("    processingWorkerCount: ").append(toIndentedString(processingWorkerCount)).append("\n");
    sb.append("    projectVersionCount: ").append(toIndentedString(projectVersionCount)).append("\n");
    sb.append("    runningJobCount: ").append(toIndentedString(runningJobCount)).append("\n");
    sb.append("    staleWorkerCount: ").append(toIndentedString(staleWorkerCount)).append("\n");
    sb.append("    totalWorkerCount: ").append(toIndentedString(totalWorkerCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

