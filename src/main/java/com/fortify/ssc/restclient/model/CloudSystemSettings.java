/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Cloudscan system settings
 */
@ApiModel(description = "Cloudscan system settings")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class CloudSystemSettings {
  @SerializedName("cleanupPeriodSeconds")
  private Long cleanupPeriodSeconds = null;

  @SerializedName("controllerMaxUploadSize")
  private Long controllerMaxUploadSize = null;

  @SerializedName("controllerSystemUrl")
  private String controllerSystemUrl = null;

  @SerializedName("isSscLockdownMode")
  private Boolean isSscLockdownMode = null;

  @SerializedName("jobExpiryDelaySeconds")
  private Long jobExpiryDelaySeconds = null;

  @SerializedName("poolMappingMode")
  private String poolMappingMode = null;

  @SerializedName("smtpFromAddress")
  private String smtpFromAddress = null;

  @SerializedName("smtpHost")
  private String smtpHost = null;

  @SerializedName("smtpPort")
  private Integer smtpPort = null;

  @SerializedName("sscUrl")
  private String sscUrl = null;

  @SerializedName("workerExpiryDelaySeconds")
  private Long workerExpiryDelaySeconds = null;

  @SerializedName("workerInactiveDelaySeconds")
  private Long workerInactiveDelaySeconds = null;

  @SerializedName("workerStaleDelaySeconds")
  private Long workerStaleDelaySeconds = null;

   /**
   * Get cleanupPeriodSeconds
   * @return cleanupPeriodSeconds
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getCleanupPeriodSeconds() {
    return cleanupPeriodSeconds;
  }

   /**
   * Get controllerMaxUploadSize
   * @return controllerMaxUploadSize
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getControllerMaxUploadSize() {
    return controllerMaxUploadSize;
  }

   /**
   * Get controllerSystemUrl
   * @return controllerSystemUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getControllerSystemUrl() {
    return controllerSystemUrl;
  }

   /**
   * Get isSscLockdownMode
   * @return isSscLockdownMode
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isIsSscLockdownMode() {
    return isSscLockdownMode;
  }

   /**
   * Get jobExpiryDelaySeconds
   * @return jobExpiryDelaySeconds
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getJobExpiryDelaySeconds() {
    return jobExpiryDelaySeconds;
  }

   /**
   * Get poolMappingMode
   * @return poolMappingMode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPoolMappingMode() {
    return poolMappingMode;
  }

   /**
   * Get smtpFromAddress
   * @return smtpFromAddress
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSmtpFromAddress() {
    return smtpFromAddress;
  }

   /**
   * Get smtpHost
   * @return smtpHost
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSmtpHost() {
    return smtpHost;
  }

   /**
   * Get smtpPort
   * @return smtpPort
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getSmtpPort() {
    return smtpPort;
  }

   /**
   * Get sscUrl
   * @return sscUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSscUrl() {
    return sscUrl;
  }

   /**
   * Get workerExpiryDelaySeconds
   * @return workerExpiryDelaySeconds
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getWorkerExpiryDelaySeconds() {
    return workerExpiryDelaySeconds;
  }

   /**
   * Get workerInactiveDelaySeconds
   * @return workerInactiveDelaySeconds
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getWorkerInactiveDelaySeconds() {
    return workerInactiveDelaySeconds;
  }

   /**
   * Get workerStaleDelaySeconds
   * @return workerStaleDelaySeconds
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getWorkerStaleDelaySeconds() {
    return workerStaleDelaySeconds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudSystemSettings cloudSystemSettings = (CloudSystemSettings) o;
    return Objects.equals(this.cleanupPeriodSeconds, cloudSystemSettings.cleanupPeriodSeconds) &&
        Objects.equals(this.controllerMaxUploadSize, cloudSystemSettings.controllerMaxUploadSize) &&
        Objects.equals(this.controllerSystemUrl, cloudSystemSettings.controllerSystemUrl) &&
        Objects.equals(this.isSscLockdownMode, cloudSystemSettings.isSscLockdownMode) &&
        Objects.equals(this.jobExpiryDelaySeconds, cloudSystemSettings.jobExpiryDelaySeconds) &&
        Objects.equals(this.poolMappingMode, cloudSystemSettings.poolMappingMode) &&
        Objects.equals(this.smtpFromAddress, cloudSystemSettings.smtpFromAddress) &&
        Objects.equals(this.smtpHost, cloudSystemSettings.smtpHost) &&
        Objects.equals(this.smtpPort, cloudSystemSettings.smtpPort) &&
        Objects.equals(this.sscUrl, cloudSystemSettings.sscUrl) &&
        Objects.equals(this.workerExpiryDelaySeconds, cloudSystemSettings.workerExpiryDelaySeconds) &&
        Objects.equals(this.workerInactiveDelaySeconds, cloudSystemSettings.workerInactiveDelaySeconds) &&
        Objects.equals(this.workerStaleDelaySeconds, cloudSystemSettings.workerStaleDelaySeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cleanupPeriodSeconds, controllerMaxUploadSize, controllerSystemUrl, isSscLockdownMode, jobExpiryDelaySeconds, poolMappingMode, smtpFromAddress, smtpHost, smtpPort, sscUrl, workerExpiryDelaySeconds, workerInactiveDelaySeconds, workerStaleDelaySeconds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudSystemSettings {\n");
    
    sb.append("    cleanupPeriodSeconds: ").append(toIndentedString(cleanupPeriodSeconds)).append("\n");
    sb.append("    controllerMaxUploadSize: ").append(toIndentedString(controllerMaxUploadSize)).append("\n");
    sb.append("    controllerSystemUrl: ").append(toIndentedString(controllerSystemUrl)).append("\n");
    sb.append("    isSscLockdownMode: ").append(toIndentedString(isSscLockdownMode)).append("\n");
    sb.append("    jobExpiryDelaySeconds: ").append(toIndentedString(jobExpiryDelaySeconds)).append("\n");
    sb.append("    poolMappingMode: ").append(toIndentedString(poolMappingMode)).append("\n");
    sb.append("    smtpFromAddress: ").append(toIndentedString(smtpFromAddress)).append("\n");
    sb.append("    smtpHost: ").append(toIndentedString(smtpHost)).append("\n");
    sb.append("    smtpPort: ").append(toIndentedString(smtpPort)).append("\n");
    sb.append("    sscUrl: ").append(toIndentedString(sscUrl)).append("\n");
    sb.append("    workerExpiryDelaySeconds: ").append(toIndentedString(workerExpiryDelaySeconds)).append("\n");
    sb.append("    workerInactiveDelaySeconds: ").append(toIndentedString(workerInactiveDelaySeconds)).append("\n");
    sb.append("    workerStaleDelaySeconds: ").append(toIndentedString(workerStaleDelaySeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

