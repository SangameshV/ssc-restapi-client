/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.model;

import java.util.Objects;
import com.fortify.ssc.restclient.model.ReportParameter;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Report Definition DTO object
 */
@ApiModel(description = "Report Definition DTO object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-09T13:54:27.094-07:00")
public class ReportDefinition {
  @SerializedName("crossApp")
  private Boolean crossApp = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("guid")
  private String guid = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("inUse")
  private Boolean inUse = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("objectVersion")
  private Integer objectVersion = null;

  @SerializedName("parameters")
  private List<ReportParameter> parameters = null;

  @SerializedName("publishVersion")
  private Integer publishVersion = null;

  @SerializedName("renderingEngine")
  private String renderingEngine = null;

  @SerializedName("templateDocId")
  private Long templateDocId = null;

  /**
   * Type of report
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    APPLICATION_REPORTS("Application Reports"),
    
    SSA_APPLICATION_REPORTS("SSA Application Reports"),
    
    SSA_PORTFOLIO_REPORTS("SSA Portfolio Reports"),
    
    PORTFOLIO_REPORTS("Portfolio Reports"),
    
    COMPLIANCE_REPORTS("Compliance Reports"),
    
    ISSUE_REPORTS("Issue Reports"),
    
    RUNTIME_APPLICATION_REPORTS("Runtime Application Reports");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("typeDefaultText")
  private String typeDefaultText = null;

  public ReportDefinition crossApp(Boolean crossApp) {
    this.crossApp = crossApp;
    return this;
  }

   /**
   * True if report applies to multiple project versions
   * @return crossApp
  **/
  @ApiModelProperty(example = "false", value = "True if report applies to multiple project versions")
  public Boolean isCrossApp() {
    return crossApp;
  }

  public void setCrossApp(Boolean crossApp) {
    this.crossApp = crossApp;
  }

  public ReportDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Report description
   * @return description
  **/
  @ApiModelProperty(value = "Report description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ReportDefinition fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * The name of the report definition file
   * @return fileName
  **/
  @ApiModelProperty(value = "The name of the report definition file")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public ReportDefinition guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Report definition GUID
   * @return guid
  **/
  @ApiModelProperty(value = "Report definition GUID")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public ReportDefinition id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Report definition identifier
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Report definition identifier")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ReportDefinition inUse(Boolean inUse) {
    this.inUse = inUse;
    return this;
  }

   /**
   * Indicates whether the report definition is in use
   * @return inUse
  **/
  @ApiModelProperty(example = "false", value = "Indicates whether the report definition is in use")
  public Boolean isInUse() {
    return inUse;
  }

  public void setInUse(Boolean inUse) {
    this.inUse = inUse;
  }

  public ReportDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Report name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Report name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ReportDefinition objectVersion(Integer objectVersion) {
    this.objectVersion = objectVersion;
    return this;
  }

   /**
   * Object version
   * @return objectVersion
  **/
  @ApiModelProperty(value = "Object version")
  public Integer getObjectVersion() {
    return objectVersion;
  }

  public void setObjectVersion(Integer objectVersion) {
    this.objectVersion = objectVersion;
  }

  public ReportDefinition parameters(List<ReportParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public ReportDefinition addParametersItem(ReportParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<ReportParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * List of report parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "List of report parameters")
  public List<ReportParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<ReportParameter> parameters) {
    this.parameters = parameters;
  }

  public ReportDefinition publishVersion(Integer publishVersion) {
    this.publishVersion = publishVersion;
    return this;
  }

   /**
   * Publish version
   * @return publishVersion
  **/
  @ApiModelProperty(value = "Publish version")
  public Integer getPublishVersion() {
    return publishVersion;
  }

  public void setPublishVersion(Integer publishVersion) {
    this.publishVersion = publishVersion;
  }

  public ReportDefinition renderingEngine(String renderingEngine) {
    this.renderingEngine = renderingEngine;
    return this;
  }

   /**
   * The engine used to render the report, e.g. BIRT
   * @return renderingEngine
  **/
  @ApiModelProperty(value = "The engine used to render the report, e.g. BIRT")
  public String getRenderingEngine() {
    return renderingEngine;
  }

  public void setRenderingEngine(String renderingEngine) {
    this.renderingEngine = renderingEngine;
  }

  public ReportDefinition templateDocId(Long templateDocId) {
    this.templateDocId = templateDocId;
    return this;
  }

   /**
   * Template doc identifier
   * @return templateDocId
  **/
  @ApiModelProperty(value = "Template doc identifier")
  public Long getTemplateDocId() {
    return templateDocId;
  }

  public void setTemplateDocId(Long templateDocId) {
    this.templateDocId = templateDocId;
  }

  public ReportDefinition type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of report
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of report")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ReportDefinition typeDefaultText(String typeDefaultText) {
    this.typeDefaultText = typeDefaultText;
    return this;
  }

   /**
   * Report type default text
   * @return typeDefaultText
  **/
  @ApiModelProperty(value = "Report type default text")
  public String getTypeDefaultText() {
    return typeDefaultText;
  }

  public void setTypeDefaultText(String typeDefaultText) {
    this.typeDefaultText = typeDefaultText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportDefinition reportDefinition = (ReportDefinition) o;
    return Objects.equals(this.crossApp, reportDefinition.crossApp) &&
        Objects.equals(this.description, reportDefinition.description) &&
        Objects.equals(this.fileName, reportDefinition.fileName) &&
        Objects.equals(this.guid, reportDefinition.guid) &&
        Objects.equals(this.id, reportDefinition.id) &&
        Objects.equals(this.inUse, reportDefinition.inUse) &&
        Objects.equals(this.name, reportDefinition.name) &&
        Objects.equals(this.objectVersion, reportDefinition.objectVersion) &&
        Objects.equals(this.parameters, reportDefinition.parameters) &&
        Objects.equals(this.publishVersion, reportDefinition.publishVersion) &&
        Objects.equals(this.renderingEngine, reportDefinition.renderingEngine) &&
        Objects.equals(this.templateDocId, reportDefinition.templateDocId) &&
        Objects.equals(this.type, reportDefinition.type) &&
        Objects.equals(this.typeDefaultText, reportDefinition.typeDefaultText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crossApp, description, fileName, guid, id, inUse, name, objectVersion, parameters, publishVersion, renderingEngine, templateDocId, type, typeDefaultText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportDefinition {\n");
    
    sb.append("    crossApp: ").append(toIndentedString(crossApp)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inUse: ").append(toIndentedString(inUse)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    objectVersion: ").append(toIndentedString(objectVersion)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    publishVersion: ").append(toIndentedString(publishVersion)).append("\n");
    sb.append("    renderingEngine: ").append(toIndentedString(renderingEngine)).append("\n");
    sb.append("    templateDocId: ").append(toIndentedString(templateDocId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeDefaultText: ").append(toIndentedString(typeDefaultText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

