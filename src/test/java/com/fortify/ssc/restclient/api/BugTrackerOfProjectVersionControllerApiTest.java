/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.api;

import com.fortify.ssc.restclient.ApiException;
import com.fortify.ssc.restclient.model.ApiCollectionActionstring;
import com.fortify.ssc.restclient.model.ApiResult;
import com.fortify.ssc.restclient.model.ApiResultApiActionResponse;
import com.fortify.ssc.restclient.model.ApiResultListProjectVersionBugTracker;
import com.fortify.ssc.restclient.model.ApiResultVoid;
import com.fortify.ssc.restclient.model.BugTrackerRequest;
import com.fortify.ssc.restclient.model.ProjectVersionBugTracker;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BugTrackerOfProjectVersionControllerApi
 */
@Ignore
public class BugTrackerOfProjectVersionControllerApiTest {

    private final BugTrackerOfProjectVersionControllerApi api = new BugTrackerOfProjectVersionControllerApi();

    
    /**
     * doAction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doActionBugTrackerOfProjectVersionTest() throws ApiException {
        Long parentId = null;
        ApiCollectionActionstring collectionAction = null;
        ApiResultApiActionResponse response = api.doActionBugTrackerOfProjectVersion(parentId, collectionAction);

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBugTrackerOfProjectVersionTest() throws ApiException {
        Long parentId = null;
        String fields = null;
        ApiResultListProjectVersionBugTracker response = api.listBugTrackerOfProjectVersion(parentId, fields);

        // TODO: test validations
    }
    
    /**
     * test
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBugTrackerOfProjectVersionTest() throws ApiException {
        Long parentId = null;
        BugTrackerRequest resource = null;
        ApiResultVoid response = api.testBugTrackerOfProjectVersion(parentId, resource);

        // TODO: test validations
    }
    
    /**
     * updateCollection
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCollectionBugTrackerOfProjectVersionTest() throws ApiException {
        Long parentId = null;
        List<ProjectVersionBugTracker> data = null;
        ApiResultListProjectVersionBugTracker response = api.updateCollectionBugTrackerOfProjectVersion(parentId, data);

        // TODO: test validations
    }
    
}
