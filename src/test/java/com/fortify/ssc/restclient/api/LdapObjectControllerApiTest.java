/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.api;

import com.fortify.ssc.restclient.ApiException;
import com.fortify.ssc.restclient.model.ApiCollectionActionlong;
import com.fortify.ssc.restclient.model.ApiResult;
import com.fortify.ssc.restclient.model.ApiResultApiActionResponse;
import com.fortify.ssc.restclient.model.ApiResultLDAPEntity;
import com.fortify.ssc.restclient.model.ApiResultLdapRefreshResponse;
import com.fortify.ssc.restclient.model.ApiResultListLDAPEntity;
import com.fortify.ssc.restclient.model.ApiResultVoid;
import com.fortify.ssc.restclient.model.LDAPEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LdapObjectControllerApi
 */
@Ignore
public class LdapObjectControllerApiTest {

    private final LdapObjectControllerApi api = new LdapObjectControllerApi();

    
    /**
     * create
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLdapObjectTest() throws ApiException {
        LDAPEntity resource = null;
        ApiResultLDAPEntity response = api.createLdapObject(resource);

        // TODO: test validations
    }
    
    /**
     * delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLdapObjectTest() throws ApiException {
        Long id = null;
        ApiResultVoid response = api.deleteLdapObject(id);

        // TODO: test validations
    }
    
    /**
     * doCollectionAction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doCollectionActionLdapObjectTest() throws ApiException {
        ApiCollectionActionlong collectionAction = null;
        ApiResultApiActionResponse response = api.doCollectionActionLdapObject(collectionAction);

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listLdapObjectTest() throws ApiException {
        String fields = null;
        Integer start = null;
        Integer limit = null;
        String q = null;
        String orderby = null;
        String ldaptype = null;
        String viewby = null;
        ApiResultListLDAPEntity response = api.listLdapObject(fields, start, limit, q, orderby, ldaptype, viewby);

        // TODO: test validations
    }
    
    /**
     * multiDelete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void multiDeleteLdapObjectTest() throws ApiException {
        String ids = null;
        ApiResultVoid response = api.multiDeleteLdapObject(ids);

        // TODO: test validations
    }
    
    /**
     * read
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readLdapObjectTest() throws ApiException {
        Long id = null;
        String fields = null;
        ApiResultLDAPEntity response = api.readLdapObject(id, fields);

        // TODO: test validations
    }
    
    /**
     * refresh
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void refreshLdapObjectTest() throws ApiException {
        ApiResultLdapRefreshResponse response = api.refreshLdapObject();

        // TODO: test validations
    }
    
    /**
     * update
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLdapObjectTest() throws ApiException {
        Long id = null;
        LDAPEntity resource = null;
        ApiResultLDAPEntity response = api.updateLdapObject(id, resource);

        // TODO: test validations
    }
    
}
