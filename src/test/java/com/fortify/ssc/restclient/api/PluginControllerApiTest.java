/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.api;

import com.fortify.ssc.restclient.ApiException;
import com.fortify.ssc.restclient.model.ApiResourceAction;
import com.fortify.ssc.restclient.model.ApiResult;
import com.fortify.ssc.restclient.model.ApiResultApiActionResponse;
import com.fortify.ssc.restclient.model.ApiResultListPluginMetaData;
import com.fortify.ssc.restclient.model.ApiResultPluginMetaData;
import com.fortify.ssc.restclient.model.ApiResultVoid;
import com.fortify.ssc.restclient.model.PluginDisableRequest;
import com.fortify.ssc.restclient.model.PluginEnableRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PluginControllerApi
 */
@Ignore
public class PluginControllerApiTest {

    private final PluginControllerApi api = new PluginControllerApi();

    
    /**
     * delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePluginTest() throws ApiException {
        Long id = null;
        ApiResultVoid response = api.deletePlugin(id);

        // TODO: test validations
    }
    
    /**
     * disable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void disablePluginTest() throws ApiException {
        PluginDisableRequest resource = null;
        ApiResultVoid response = api.disablePlugin(resource);

        // TODO: test validations
    }
    
    /**
     * doAction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doActionPluginTest() throws ApiException {
        Long id = null;
        ApiResourceAction apiResourceAction = null;
        ApiResultApiActionResponse response = api.doActionPlugin(id, apiResourceAction);

        // TODO: test validations
    }
    
    /**
     * enable
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enablePluginTest() throws ApiException {
        PluginEnableRequest resource = null;
        ApiResultVoid response = api.enablePlugin(resource);

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPluginTest() throws ApiException {
        String fields = null;
        Integer start = null;
        Integer limit = null;
        String q = null;
        String orderby = null;
        ApiResultListPluginMetaData response = api.listPlugin(fields, start, limit, q, orderby);

        // TODO: test validations
    }
    
    /**
     * read
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readPluginTest() throws ApiException {
        Long id = null;
        String fields = null;
        ApiResultPluginMetaData response = api.readPlugin(id, fields);

        // TODO: test validations
    }
    
}
