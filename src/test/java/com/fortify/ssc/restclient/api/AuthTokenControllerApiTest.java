/*
 * Fortify Software Security Center API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1:18.20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.fortify.ssc.restclient.api;

import com.fortify.ssc.restclient.ApiException;
import com.fortify.ssc.restclient.model.ApiResult;
import com.fortify.ssc.restclient.model.ApiResultAuthenticationToken;
import com.fortify.ssc.restclient.model.ApiResultListAuthenticationToken;
import com.fortify.ssc.restclient.model.ApiResultVoid;
import com.fortify.ssc.restclient.model.AuthTokenRevokeRequest;
import com.fortify.ssc.restclient.model.AuthenticationToken;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthTokenControllerApi
 */
@Ignore
public class AuthTokenControllerApiTest {

    private final AuthTokenControllerApi api = new AuthTokenControllerApi();

    
    /**
     * create
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthTokenTest() throws ApiException {
        AuthenticationToken authToken = null;
        ApiResultAuthenticationToken response = api.createAuthToken(authToken);

        // TODO: test validations
    }
    
    /**
     * delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthTokenTest() throws ApiException {
        Long id = null;
        ApiResultVoid response = api.deleteAuthToken(id);

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthTokenTest() throws ApiException {
        String fields = null;
        Integer start = null;
        Integer limit = null;
        String q = null;
        String orderby = null;
        ApiResultListAuthenticationToken response = api.listAuthToken(fields, start, limit, q, orderby);

        // TODO: test validations
    }
    
    /**
     * Revoke authentication tokens using ONE of two choices: (1) all tokens owned by the requesting user, OR (2) list of token ids.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void multiDeleteAuthTokenTest() throws ApiException {
        Boolean all = null;
        String ids = null;
        ApiResultVoid response = api.multiDeleteAuthToken(all, ids);

        // TODO: test validations
    }
    
    /**
     * Revoke authentication tokens by value
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void revokeAuthTokenTest() throws ApiException {
        AuthTokenRevokeRequest resource = null;
        ApiResultVoid response = api.revokeAuthToken(resource);

        // TODO: test validations
    }
    
    /**
     * update
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAuthTokenTest() throws ApiException {
        Long id = null;
        AuthenticationToken resource = null;
        ApiResultAuthenticationToken response = api.updateAuthToken(id, resource);

        // TODO: test validations
    }
    
}
